language ESSENCE' 1.0
letting SIZE be 9
given lastdx : int(1..(((((2 * SIZE) * ((SIZE - 1))) - 1))))
letting NUMQD be domain int(0..lastdx)
letting RANGE be domain int(1..SIZE)
letting VALUES be domain int(0..SIZE)
given cage : matrix indexed by [NUMQD,int(0..8)] of int(0..100)
find field : matrix indexed by [RANGE,RANGE] of RANGE
such that
(forAll row : RANGE . allDiff(field[row,..])),
(forAll col : RANGE . allDiff(field[..,col])),
(forAll i : int(0..2) . (forAll j : int(0..2) . (forAll col1 : int(1..3) . (forAll col2 : int(1..3) . (forAll row1 : int(1..3) . (forAll row2 : int(1..3) . (((((col1!=col2)) /\ ((row1!=row2)))) -> ((field[(row1 + ((i * 3))), (col1 + ((j * 3)))]!=field[(row2 + ((i * 3))), (col2 + ((j * 3)))]))))))))),
(forAll i : NUMQD . (((((((cage[i, 7]!=0)) /\ ((cage[i, 0]=(((field[cage[i, 1], cage[i, 2]] + field[cage[i, 3], cage[i, 4]]) + field[cage[i, 5], cage[i, 6]]) + field[cage[i, 7], cage[i, 8]]))))) \/ (((((cage[i, 7]=0)) /\ ((cage[i, 5]!=0))) /\ ((cage[i, 0]=((field[cage[i, 1], cage[i, 2]] + field[cage[i, 3], cage[i, 4]]) + field[cage[i, 5], cage[i, 6]])))))) \/ (((((cage[i, 5]=0)) /\ ((cage[i, 3]!=0))) /\ ((cage[i, 0]=(field[cage[i, 1], cage[i, 2]] + field[cage[i, 3], cage[i, 4]])))))) \/ ((((cage[i, 3]=0)) /\ ((cage[i, 0]=field[cage[i, 1], cage[i, 2]]))))))
