MINION 3
**VARIABLES**
DISCRETE board_00000_00000 #
{0..2}
DISCRETE board_00000_00001 #
{0..2}
DISCRETE board_00000_00002 #
{0..2}
DISCRETE board_00000_00003 #
{0..2}
DISCRETE board_00000_00004 #
{0..2}
DISCRETE board_00001_00000 #
{0..2}
DISCRETE board_00001_00001 #
{0..2}
DISCRETE board_00001_00002 #
{0..2}
DISCRETE board_00001_00003 #
{0..2}
DISCRETE board_00001_00004 #
{0..2}
DISCRETE board_00002_00000 #
{0..2}
DISCRETE board_00002_00001 #
{0..2}
DISCRETE board_00002_00002 #
{0..2}
DISCRETE board_00002_00003 #
{0..2}
DISCRETE board_00002_00004 #
{0..2}
DISCRETE board_00003_00000 #
{0..2}
DISCRETE board_00003_00001 #
{0..2}
DISCRETE board_00003_00002 #
{0..2}
DISCRETE board_00003_00003 #
{0..2}
DISCRETE board_00003_00004 #
{0..2}
DISCRETE board_00004_00000 #
{0..2}
DISCRETE board_00004_00001 #
{0..2}
DISCRETE board_00004_00002 #
{0..2}
DISCRETE board_00004_00003 #
{0..2}
DISCRETE board_00004_00004 #
{0..2}
DISCRETE amountOfQueens #
{1..12}
DISCRETE aux14 #(board_00003_00001 + board_00001_00001)
{0..4}
DISCRETE aux15 #(board_00003_00001 + board_00001_00003)
{0..4}
DISCRETE aux16 #(board_00000_00002 + board_00001_00003)
{0..4}
DISCRETE aux17 #(board_00000_00004 + board_00002_00004)
{0..4}
DISCRETE aux18 #(board_00000_00004 + board_00002_00002)
{0..4}
DISCRETE aux19 #(board_00003_00003 + board_00004_00003)
{0..4}
DISCRETE aux20 #(board_00000_00000 + board_00000_00002)
{0..4}
DISCRETE aux21 #(board_00003_00000 + board_00001_00000)
{0..4}
DISCRETE aux22 #(board_00003_00000 + board_00001_00002)
{0..4}
DISCRETE aux23 #(board_00000_00002 + board_00001_00002)
{0..4}
DISCRETE aux24 #(board_00000_00003 + board_00002_00001)
{0..4}
DISCRETE aux25 #(board_00000_00003 + board_00002_00003)
{0..4}
DISCRETE aux26 #(board_00003_00003 + board_00004_00004)
{0..4}
DISCRETE aux27 #(board_00000_00000 + board_00000_00001)
{0..4}
DISCRETE aux28 #(board_00003_00004 + board_00002_00003)
{0..4}
DISCRETE aux29 #(board_00003_00004 + board_00002_00004)
{0..4}
DISCRETE aux30 #(board_00000_00000 + board_00000_00004)
{0..4}
DISCRETE aux31 #(board_00000_00002 + board_00002_00004)
{0..4}
DISCRETE aux32 #(board_00000_00002 + board_00002_00002)
{0..4}
DISCRETE aux33 #(board_00000_00002 + board_00002_00000)
{0..4}
DISCRETE aux34 #(board_00000_00001 + board_00002_00003)
{0..4}
DISCRETE aux35 #(board_00000_00000 + board_00000_00003)
{0..4}
DISCRETE aux36 #(board_00000_00001 + board_00002_00001)
{0..4}
DISCRETE aux37 #(board_00000_00003 + board_00001_00004)
{0..4}
DISCRETE aux38 #(board_00003_00000 + board_00003_00001)
{0..4}
DISCRETE aux39 #(board_00003_00002 + board_00002_00001)
{0..4}
DISCRETE aux40 #(board_00001_00001 + board_00001_00003)
{0..4}
DISCRETE aux41 #(board_00001_00001 + board_00001_00002)
{0..4}
DISCRETE aux42 #(board_00001_00001 + board_00001_00004)
{0..4}
DISCRETE aux43 #(board_00003_00000 + board_00000_00003)
{0..4}
DISCRETE aux44 #(board_00001_00000 + board_00002_00001)
{0..4}
DISCRETE aux45 #(board_00004_00001 + board_00002_00003)
{0..4}
DISCRETE aux46 #(board_00000_00000 + board_00002_00000)
{0..4}
DISCRETE aux47 #(board_00000_00003 + board_00001_00003)
{0..4}
DISCRETE aux48 #(board_00002_00000 + board_00002_00004)
{0..4}
DISCRETE aux49 #(board_00002_00002 + board_00002_00003)
{0..4}
DISCRETE aux50 #(board_00000_00000 + board_00002_00002)
{0..4}
DISCRETE aux51 #(board_00003_00002 + board_00002_00002)
{0..4}
DISCRETE aux52 #(board_00003_00002 + board_00002_00003)
{0..4}
DISCRETE aux53 #(board_00002_00001 + board_00002_00003)
{0..4}
DISCRETE aux54 #(board_00003_00001 + board_00000_00004)
{0..4}
DISCRETE aux55 #(board_00002_00003 + board_00002_00004)
{0..4}
DISCRETE aux56 #(board_00003_00003 + board_00002_00002)
{0..4}
DISCRETE aux57 #(board_00001_00000 + board_00001_00002)
{0..4}
DISCRETE aux58 #(board_00001_00000 + board_00001_00001)
{0..4}
DISCRETE aux59 #(board_00000_00001 + board_00001_00002)
{0..4}
DISCRETE aux60 #(board_00003_00004 + board_00001_00002)
{0..4}
DISCRETE aux61 #(board_00001_00000 + board_00001_00004)
{0..4}
DISCRETE aux62 #(board_00000_00003 + board_00000_00004)
{0..4}
DISCRETE aux63 #(board_00003_00004 + board_00001_00004)
{0..4}
DISCRETE aux64 #(board_00003_00001 + board_00003_00004)
{0..4}
DISCRETE aux65 #(board_00001_00000 + board_00001_00003)
{0..4}
BOOL aux66 #(board_00004_00000=1)
BOOL aux67 #(board_00004_00001=1)
BOOL aux68 #(board_00004_00002=1)
BOOL aux69 #(board_00004_00003=1)
BOOL aux70 #(board_00004_00004=1)
BOOL aux71 #(board_00000_00000=1)
BOOL aux72 #(board_00000_00001=1)
BOOL aux73 #(board_00000_00002=1)
BOOL aux74 #(board_00000_00003=1)
BOOL aux75 #(board_00000_00004=1)
BOOL aux76 #(board_00003_00000=1)
BOOL aux77 #(board_00003_00001=1)
BOOL aux78 #(board_00003_00002=1)
BOOL aux79 #(board_00003_00003=1)
BOOL aux80 #(board_00003_00004=1)
BOOL aux81 #(1=board_00001_00000)
BOOL aux82 #(1=board_00001_00001)
BOOL aux83 #(1=board_00001_00002)
BOOL aux84 #(1=board_00001_00003)
BOOL aux85 #(1=board_00001_00004)
BOOL aux86 #(1=board_00002_00000)
BOOL aux87 #(1=board_00002_00001)
BOOL aux88 #(1=board_00002_00002)
BOOL aux89 #(1=board_00002_00003)
BOOL aux90 #(1=board_00002_00004)
DISCRETE aux91 #(aux66 + aux67 + aux68 + aux69 + aux70 + aux71 + aux72 + aux73 + aux74 + aux75 + aux76 + aux77 + aux78 + aux79 + aux80 + aux81 + aux82 + aux83 + aux84 + aux85 + aux86 + aux87 + aux88 + aux89 + aux90)
{0..25}
DISCRETE aux92 #(board_00000_00003 + board_00001_00002)
{0..4}
DISCRETE aux93 #(board_00002_00002 + board_00002_00004)
{0..4}
DISCRETE aux94 #(board_00004_00000 + board_00002_00000)
{0..4}
DISCRETE aux95 #(board_00003_00003 + board_00002_00003)
{0..4}
DISCRETE aux96 #(board_00002_00001 + board_00002_00004)
{0..4}
DISCRETE aux97 #(board_00003_00003 + board_00002_00004)
{0..4}
DISCRETE aux98 #(board_00002_00000 + board_00002_00003)
{0..4}
DISCRETE aux99 #(board_00003_00004 + board_00000_00004)
{0..4}
DISCRETE aux100 #(board_00000_00000 + board_00001_00001)
{0..4}
DISCRETE aux101 #(board_00000_00001 + board_00000_00004)
{0..4}
DISCRETE aux102 #(board_00003_00000 + board_00003_00003)
{0..4}
DISCRETE aux103 #(board_00003_00001 + board_00003_00003)
{0..4}
DISCRETE aux104 #(board_00003_00003 + board_00001_00003)
{0..4}
DISCRETE aux105 #(board_00003_00003 + board_00001_00001)
{0..4}
DISCRETE aux106 #(board_00000_00001 + board_00001_00001)
{0..4}
DISCRETE aux107 #(board_00001_00003 + board_00001_00004)
{0..4}
DISCRETE aux108 #(board_00004_00001 + board_00002_00001)
{0..4}
DISCRETE aux109 #(board_00000_00002 + board_00001_00001)
{0..4}
DISCRETE aux110 #(board_00003_00000 + board_00002_00000)
{0..4}
DISCRETE aux111 #(board_00003_00000 + board_00002_00001)
{0..4}
DISCRETE aux112 #(board_00003_00001 + board_00002_00000)
{0..4}
DISCRETE aux113 #(board_00000_00000 + board_00001_00000)
{0..4}
DISCRETE aux114 #(board_00003_00004 + board_00000_00001)
{0..4}
DISCRETE aux115 #(board_00003_00000 + board_00003_00002)
{0..4}
DISCRETE aux116 #(board_00000_00001 + board_00000_00003)
{0..4}
DISCRETE aux117 #(board_00004_00004 + board_00002_00002)
{0..4}
DISCRETE aux118 #(board_00003_00002 + board_00001_00000)
{0..4}
DISCRETE aux119 #(board_00003_00001 + board_00003_00002)
{0..4}
DISCRETE aux120 #(board_00001_00000 + board_00002_00000)
{0..4}
DISCRETE aux121 #(board_00003_00002 + board_00001_00002)
{0..4}
DISCRETE aux122 #(board_00001_00002 + board_00001_00004)
{0..4}
DISCRETE aux123 #(board_00000_00001 + board_00001_00000)
{0..4}
DISCRETE aux124 #(board_00001_00002 + board_00001_00003)
{0..4}
DISCRETE aux125 #(board_00004_00000 + board_00001_00003)
{0..4}
DISCRETE aux126 #(board_00003_00002 + board_00001_00004)
{0..4}
DISCRETE aux127 #(board_00004_00000 + board_00002_00002)
{0..4}
DISCRETE aux128 #(board_00004_00001 + board_00001_00004)
{0..4}
DISCRETE aux129 #(board_00002_00001 + board_00002_00002)
{0..4}
DISCRETE aux130 #(board_00003_00001 + board_00002_00001)
{0..4}
DISCRETE aux131 #(board_00003_00001 + board_00002_00002)
{0..4}
DISCRETE aux132 #(board_00001_00004 + board_00002_00004)
{0..4}
DISCRETE aux133 #(board_00004_00002 + board_00001_00002)
{0..4}
DISCRETE aux134 #(board_00004_00004 + board_00001_00001)
{0..4}
DISCRETE aux135 #(board_00004_00002 + board_00002_00004)
{0..4}
DISCRETE aux136 #(board_00001_00003 + board_00002_00004)
{0..4}
DISCRETE aux137 #(board_00004_00004 + board_00002_00004)
{0..4}
DISCRETE aux138 #(board_00004_00004 + board_00000_00004)
{0..4}
DISCRETE aux139 #(board_00003_00002 + board_00003_00004)
{0..4}
DISCRETE aux140 #(board_00004_00004 + board_00000_00000)
{0..4}
DISCRETE aux141 #(board_00003_00000 + board_00000_00000)
{0..4}
DISCRETE aux142 #(board_00000_00001 + board_00000_00002)
{0..4}
DISCRETE aux143 #(board_00004_00002 + board_00004_00003)
{0..4}
DISCRETE aux144 #(board_00004_00002 + board_00004_00004)
{0..4}
DISCRETE aux145 #(board_00001_00004 + board_00002_00003)
{0..4}
DISCRETE aux146 #(board_00001_00003 + board_00002_00003)
{0..4}
DISCRETE aux147 #(board_00000_00004 + board_00001_00003)
{0..4}
DISCRETE aux148 #(board_00004_00003 + board_00000_00003)
{0..4}
DISCRETE aux149 #(board_00004_00000 + board_00001_00000)
{0..4}
DISCRETE aux150 #(board_00003_00000 + board_00003_00004)
{0..4}
DISCRETE aux151 #(board_00001_00002 + board_00002_00003)
{0..4}
DISCRETE aux152 #(board_00004_00001 + board_00004_00002)
{0..4}
DISCRETE aux153 #(board_00004_00001 + board_00004_00003)
{0..4}
DISCRETE aux154 #(board_00004_00003 + board_00001_00003)
{0..4}
DISCRETE aux155 #(board_00004_00001 + board_00004_00004)
{0..4}
DISCRETE aux156 #(board_00002_00000 + board_00002_00002)
{0..4}
DISCRETE aux157 #(board_00000_00004 + board_00001_00004)
{0..4}
DISCRETE aux158 #(board_00001_00003 + board_00002_00002)
{0..4}
DISCRETE aux159 #(board_00001_00001 + board_00002_00002)
{0..4}
DISCRETE aux160 #(board_00000_00002 + board_00000_00004)
{0..4}
DISCRETE aux161 #(board_00004_00004 + board_00001_00004)
{0..4}
DISCRETE aux162 #(board_00004_00002 + board_00000_00002)
{0..4}
DISCRETE aux163 #(board_00003_00000 + board_00004_00000)
{0..4}
DISCRETE aux164 #(board_00004_00001 + board_00001_00001)
{0..4}
DISCRETE aux165 #(board_00002_00000 + board_00002_00001)
{0..4}
DISCRETE aux166 #(board_00004_00003 + board_00001_00000)
{0..4}
DISCRETE aux167 #(board_00001_00001 + board_00002_00001)
{0..4}
DISCRETE aux168 #(board_00000_00002 + board_00000_00003)
{0..4}
DISCRETE aux169 #(board_00004_00001 + board_00000_00001)
{0..4}
DISCRETE aux170 #(board_00003_00003 + board_00000_00000)
{0..4}
DISCRETE aux171 #(board_00004_00003 + board_00004_00004)
{0..4}
DISCRETE aux172 #(board_00003_00001 + board_00000_00001)
{0..4}
DISCRETE aux173 #(board_00004_00002 + board_00002_00000)
{0..4}
DISCRETE aux174 #(board_00003_00002 + board_00004_00002)
{0..4}
DISCRETE aux175 #(board_00004_00000 + board_00000_00004)
{0..4}
DISCRETE aux176 #(board_00003_00004 + board_00004_00003)
{0..4}
DISCRETE aux177 #(board_00003_00001 + board_00004_00002)
{0..4}
DISCRETE aux178 #(board_00003_00003 + board_00003_00004)
{0..4}
DISCRETE aux179 #(board_00004_00000 + board_00000_00000)
{0..4}
DISCRETE aux180 #(board_00001_00001 + board_00002_00000)
{0..4}
DISCRETE aux181 #(board_00003_00002 + board_00004_00001)
{0..4}
BOOL aux182 #(board_00004_00000=2)
BOOL aux183 #(board_00004_00001=2)
BOOL aux184 #(board_00004_00002=2)
BOOL aux185 #(board_00004_00003=2)
BOOL aux186 #(board_00004_00004=2)
BOOL aux187 #(board_00000_00000=2)
BOOL aux188 #(board_00000_00001=2)
BOOL aux189 #(board_00000_00002=2)
BOOL aux190 #(board_00000_00003=2)
BOOL aux191 #(board_00000_00004=2)
BOOL aux192 #(board_00003_00000=2)
BOOL aux193 #(board_00003_00001=2)
BOOL aux194 #(board_00003_00002=2)
BOOL aux195 #(board_00003_00003=2)
BOOL aux196 #(board_00003_00004=2)
BOOL aux197 #(2=board_00001_00000)
BOOL aux198 #(2=board_00001_00001)
BOOL aux199 #(2=board_00001_00002)
BOOL aux200 #(2=board_00001_00003)
BOOL aux201 #(2=board_00001_00004)
BOOL aux202 #(2=board_00002_00000)
BOOL aux203 #(2=board_00002_00001)
BOOL aux204 #(2=board_00002_00002)
BOOL aux205 #(2=board_00002_00003)
BOOL aux206 #(2=board_00002_00004)
DISCRETE aux207 #(aux182 + aux183 + aux184 + aux185 + aux186 + aux187 + aux188 + aux189 + aux190 + aux191 + aux192 + aux193 + aux194 + aux195 + aux196 + aux197 + aux198 + aux199 + aux200 + aux201 + aux202 + aux203 + aux204 + aux205 + aux206)
{0..25}
DISCRETE aux208 #(board_00003_00003 + board_00000_00003)
{0..4}
DISCRETE aux209 #(board_00003_00001 + board_00004_00001)
{0..4}
DISCRETE aux210 #(board_00004_00003 + board_00002_00003)
{0..4}
DISCRETE aux211 #(board_00003_00004 + board_00004_00004)
{0..4}
DISCRETE aux212 #(board_00003_00000 + board_00004_00001)
{0..4}
DISCRETE aux213 #(board_00003_00002 + board_00000_00002)
{0..4}
DISCRETE aux214 #(board_00004_00002 + board_00002_00002)
{0..4}
DISCRETE aux215 #(board_00003_00001 + board_00004_00000)
{0..4}
DISCRETE aux216 #(board_00004_00000 + board_00004_00004)
{0..4}
DISCRETE aux217 #(board_00004_00000 + board_00004_00003)
{0..4}
DISCRETE aux218 #(board_00001_00002 + board_00002_00002)
{0..4}
DISCRETE aux219 #(board_00004_00000 + board_00004_00002)
{0..4}
DISCRETE aux220 #(board_00004_00000 + board_00004_00001)
{0..4}
DISCRETE aux221 #(board_00003_00003 + board_00004_00002)
{0..4}
DISCRETE aux222 #(board_00003_00002 + board_00004_00003)
{0..4}
DISCRETE aux223 #(board_00004_00003 + board_00002_00001)
{0..4}
DISCRETE aux224 #(board_00001_00002 + board_00002_00001)
{0..4}
DISCRETE aux225 #(board_00003_00002 + board_00003_00003)
{0..4}
**SEARCH**
PRINT[[board_00000_00000],[board_00000_00001],[board_00000_00002],[board_00000_00003],[board_00000_00004],[board_00001_00000],[board_00001_00001],[board_00001_00002],[board_00001_00003],[board_00001_00004],[board_00002_00000],[board_00002_00001],[board_00002_00002],[board_00002_00003],[board_00002_00004],[board_00003_00000],[board_00003_00001],[board_00003_00002],[board_00003_00003],[board_00003_00004],[board_00004_00000],[board_00004_00001],[board_00004_00002],[board_00004_00003],[board_00004_00004],[amountOfQueens],[amountOfQueens]]
MAXIMISING amountOfQueens
VARORDER STATIC [board_00000_00000, board_00000_00001, board_00000_00002, board_00000_00003, board_00000_00004, board_00001_00000, board_00001_00001, board_00001_00002, board_00001_00003, board_00001_00004, board_00002_00000, board_00002_00001, board_00002_00002, board_00002_00003, board_00002_00004, board_00003_00000, board_00003_00001, board_00003_00002, board_00003_00003, board_00003_00004, board_00004_00000, board_00004_00001, board_00004_00002, board_00004_00003, board_00004_00004, amountOfQueens]
VARORDER AUX [board_00000_00000,board_00000_00001,board_00000_00002,board_00000_00003,board_00000_00004,board_00001_00000,board_00001_00001,board_00001_00002,board_00001_00003,board_00001_00004,board_00002_00000,board_00002_00001,board_00002_00002,board_00002_00003,board_00002_00004,board_00003_00000,board_00003_00001,board_00003_00002,board_00003_00003,board_00003_00004,board_00004_00000,board_00004_00001,board_00004_00002,board_00004_00003,board_00004_00004,amountOfQueens,aux14,aux15,aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,aux56,aux57,aux58,aux59,aux60,aux61,aux62,aux63,aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,aux88,aux89,aux90,aux91,aux92,aux93,aux94,aux95,aux96,aux97,aux98,aux99,aux100,aux101,aux102,aux103,aux104,aux105,aux106,aux107,aux108,aux109,aux110,aux111,aux112,aux113,aux114,aux115,aux116,aux117,aux118,aux119,aux120,aux121,aux122,aux123,aux124,aux125,aux126,aux127,aux128,aux129,aux130,aux131,aux132,aux133,aux134,aux135,aux136,aux137,aux138,aux139,aux140,aux141,aux142,aux143,aux144,aux145,aux146,aux147,aux148,aux149,aux150,aux151,aux152,aux153,aux154,aux155,aux156,aux157,aux158,aux159,aux160,aux161,aux162,aux163,aux164,aux165,aux166,aux167,aux168,aux169,aux170,aux171,aux172,aux173,aux174,aux175,aux176,aux177,aux178,aux179,aux180,aux181,aux182,aux183,aux184,aux185,aux186,aux187,aux188,aux189,aux190,aux191,aux192,aux193,aux194,aux195,aux196,aux197,aux198,aux199,aux200,aux201,aux202,aux203,aux204,aux205,aux206,aux207,aux208,aux209,aux210,aux211,aux212,aux213,aux214,aux215,aux216,aux217,aux218,aux219,aux220,aux221,aux222,aux223,aux224,aux225]
**CONSTRAINTS**
reify(w-literal(board_00004_00000,1), aux66)
reify(w-literal(board_00004_00001,1), aux67)
reify(w-literal(board_00004_00002,1), aux68)
reify(w-literal(board_00004_00003,1), aux69)
reify(w-literal(board_00004_00004,1), aux70)
reify(w-literal(board_00000_00000,1), aux71)
reify(w-literal(board_00000_00001,1), aux72)
reify(w-literal(board_00000_00002,1), aux73)
reify(w-literal(board_00000_00003,1), aux74)
reify(w-literal(board_00000_00004,1), aux75)
reify(w-literal(board_00003_00000,1), aux76)
reify(w-literal(board_00003_00001,1), aux77)
reify(w-literal(board_00003_00002,1), aux78)
reify(w-literal(board_00003_00003,1), aux79)
reify(w-literal(board_00003_00004,1), aux80)
reify(w-literal(board_00001_00000,1), aux81)
reify(w-literal(board_00001_00001,1), aux82)
reify(w-literal(board_00001_00002,1), aux83)
reify(w-literal(board_00001_00003,1), aux84)
reify(w-literal(board_00001_00004,1), aux85)
reify(w-literal(board_00002_00000,1), aux86)
reify(w-literal(board_00002_00001,1), aux87)
reify(w-literal(board_00002_00002,1), aux88)
reify(w-literal(board_00002_00003,1), aux89)
reify(w-literal(board_00002_00004,1), aux90)
reify(w-literal(board_00004_00000,2), aux182)
reify(w-literal(board_00004_00001,2), aux183)
reify(w-literal(board_00004_00002,2), aux184)
reify(w-literal(board_00004_00003,2), aux185)
reify(w-literal(board_00004_00004,2), aux186)
reify(w-literal(board_00000_00000,2), aux187)
reify(w-literal(board_00000_00001,2), aux188)
reify(w-literal(board_00000_00002,2), aux189)
reify(w-literal(board_00000_00003,2), aux190)
reify(w-literal(board_00000_00004,2), aux191)
reify(w-literal(board_00003_00000,2), aux192)
reify(w-literal(board_00003_00001,2), aux193)
reify(w-literal(board_00003_00002,2), aux194)
reify(w-literal(board_00003_00003,2), aux195)
reify(w-literal(board_00003_00004,2), aux196)
reify(w-literal(board_00001_00000,2), aux197)
reify(w-literal(board_00001_00001,2), aux198)
reify(w-literal(board_00001_00002,2), aux199)
reify(w-literal(board_00001_00003,2), aux200)
reify(w-literal(board_00001_00004,2), aux201)
reify(w-literal(board_00002_00000,2), aux202)
reify(w-literal(board_00002_00001,2), aux203)
reify(w-literal(board_00002_00002,2), aux204)
reify(w-literal(board_00002_00003,2), aux205)
reify(w-literal(board_00002_00004,2), aux206)
diseq(3,aux14)
diseq(3,aux15)
diseq(aux16,3)
diseq(3,aux17)
diseq(3,aux18)
diseq(aux19,3)
diseq(aux20,3)
diseq(3,aux21)
diseq(3,aux22)
diseq(aux23,3)
diseq(3,aux24)
diseq(3,aux25)
diseq(aux26,3)
diseq(aux27,3)
diseq(3,aux28)
diseq(3,aux29)
diseq(aux30,3)
diseq(3,aux31)
diseq(3,aux32)
diseq(3,aux33)
diseq(3,aux34)
diseq(aux35,3)
diseq(3,aux36)
diseq(aux37,3)
diseq(aux38,3)
diseq(3,aux39)
diseq(3,aux40)
diseq(3,aux41)
diseq(3,aux42)
diseq(aux43,3)
diseq(aux44,3)
diseq(aux45,3)
diseq(3,aux46)
diseq(aux47,3)
diseq(aux48,3)
diseq(aux49,3)
diseq(3,aux50)
diseq(3,aux51)
diseq(3,aux52)
diseq(aux53,3)
diseq(aux54,3)
diseq(aux55,3)
diseq(3,aux56)
diseq(3,aux57)
diseq(3,aux58)
diseq(aux59,3)
diseq(3,aux60)
diseq(3,aux61)
diseq(aux62,3)
diseq(3,aux63)
diseq(aux64,3)
diseq(3,aux65)
gaceq(aux91,amountOfQueens)
diseq(aux92,3)
diseq(aux93,3)
diseq(aux94,3)
diseq(3,aux95)
diseq(aux96,3)
diseq(3,aux97)
diseq(aux98,3)
diseq(aux99,3)
diseq(aux100,3)
diseq(aux101,3)
diseq(aux102,3)
diseq(aux103,3)
diseq(3,aux104)
diseq(3,aux105)
diseq(aux106,3)
diseq(3,aux107)
diseq(aux108,3)
diseq(aux109,3)
diseq(3,aux110)
diseq(3,aux111)
diseq(3,aux112)
diseq(aux113,3)
diseq(aux114,3)
diseq(aux115,3)
diseq(aux116,3)
diseq(aux117,3)
diseq(3,aux118)
diseq(aux119,3)
diseq(aux120,3)
diseq(3,aux121)
diseq(3,aux122)
diseq(aux123,3)
diseq(3,aux124)
diseq(aux125,3)
diseq(3,aux126)
diseq(aux127,3)
diseq(aux128,3)
diseq(aux129,3)
diseq(3,aux130)
diseq(3,aux131)
diseq(aux132,3)
diseq(aux133,3)
diseq(aux134,3)
diseq(aux135,3)
diseq(aux136,3)
diseq(aux137,3)
diseq(3,aux138)
diseq(aux139,3)
diseq(3,aux140)
diseq(aux141,3)
diseq(aux142,3)
diseq(3,aux143)
diseq(3,aux144)
diseq(aux145,3)
diseq(aux146,3)
diseq(aux147,3)
diseq(3,aux148)
diseq(aux149,3)
diseq(aux150,3)
diseq(aux151,3)
diseq(3,aux152)
diseq(3,aux153)
diseq(aux154,3)
diseq(3,aux155)
diseq(aux156,3)
diseq(aux157,3)
diseq(aux158,3)
diseq(aux159,3)
diseq(aux160,3)
diseq(aux161,3)
diseq(3,aux162)
diseq(aux163,3)
diseq(aux164,3)
diseq(aux165,3)
diseq(aux166,3)
diseq(aux167,3)
diseq(aux168,3)
diseq(3,aux169)
diseq(aux170,3)
diseq(3,aux171)
diseq(aux172,3)
diseq(aux173,3)
diseq(aux174,3)
diseq(3,aux175)
diseq(aux176,3)
diseq(aux177,3)
diseq(aux178,3)
diseq(3,aux179)
diseq(aux180,3)
diseq(aux181,3)
gaceq(aux207,amountOfQueens)
diseq(aux208,3)
diseq(aux209,3)
diseq(aux210,3)
diseq(aux211,3)
diseq(aux212,3)
diseq(aux213,3)
diseq(aux214,3)
diseq(aux215,3)
diseq(3,aux216)
diseq(3,aux217)
diseq(aux218,3)
diseq(3,aux219)
diseq(3,aux220)
diseq(aux221,3)
diseq(aux222,3)
diseq(aux223,3)
diseq(aux224,3)
diseq(aux225,3)
sumleq([board_00003_00001,board_00001_00001],aux14)
sumgeq([board_00003_00001,board_00001_00001],aux14)
sumleq([board_00003_00001,board_00001_00003],aux15)
sumgeq([board_00003_00001,board_00001_00003],aux15)
sumleq([board_00000_00002,board_00001_00003],aux16)
sumgeq([board_00000_00002,board_00001_00003],aux16)
sumleq([board_00000_00004,board_00002_00004],aux17)
sumgeq([board_00000_00004,board_00002_00004],aux17)
sumleq([board_00000_00004,board_00002_00002],aux18)
sumgeq([board_00000_00004,board_00002_00002],aux18)
sumleq([board_00003_00003,board_00004_00003],aux19)
sumgeq([board_00003_00003,board_00004_00003],aux19)
sumleq([board_00000_00000,board_00000_00002],aux20)
sumgeq([board_00000_00000,board_00000_00002],aux20)
sumleq([board_00003_00000,board_00001_00000],aux21)
sumgeq([board_00003_00000,board_00001_00000],aux21)
sumleq([board_00003_00000,board_00001_00002],aux22)
sumgeq([board_00003_00000,board_00001_00002],aux22)
sumleq([board_00000_00002,board_00001_00002],aux23)
sumgeq([board_00000_00002,board_00001_00002],aux23)
sumleq([board_00000_00003,board_00002_00001],aux24)
sumgeq([board_00000_00003,board_00002_00001],aux24)
sumleq([board_00000_00003,board_00002_00003],aux25)
sumgeq([board_00000_00003,board_00002_00003],aux25)
sumleq([board_00003_00003,board_00004_00004],aux26)
sumgeq([board_00003_00003,board_00004_00004],aux26)
sumleq([board_00000_00000,board_00000_00001],aux27)
sumgeq([board_00000_00000,board_00000_00001],aux27)
sumleq([board_00003_00004,board_00002_00003],aux28)
sumgeq([board_00003_00004,board_00002_00003],aux28)
sumleq([board_00003_00004,board_00002_00004],aux29)
sumgeq([board_00003_00004,board_00002_00004],aux29)
sumleq([board_00000_00000,board_00000_00004],aux30)
sumgeq([board_00000_00000,board_00000_00004],aux30)
sumleq([board_00000_00002,board_00002_00004],aux31)
sumgeq([board_00000_00002,board_00002_00004],aux31)
sumleq([board_00000_00002,board_00002_00002],aux32)
sumgeq([board_00000_00002,board_00002_00002],aux32)
sumleq([board_00000_00002,board_00002_00000],aux33)
sumgeq([board_00000_00002,board_00002_00000],aux33)
sumleq([board_00000_00001,board_00002_00003],aux34)
sumgeq([board_00000_00001,board_00002_00003],aux34)
sumleq([board_00000_00000,board_00000_00003],aux35)
sumgeq([board_00000_00000,board_00000_00003],aux35)
sumleq([board_00000_00001,board_00002_00001],aux36)
sumgeq([board_00000_00001,board_00002_00001],aux36)
sumleq([board_00000_00003,board_00001_00004],aux37)
sumgeq([board_00000_00003,board_00001_00004],aux37)
sumleq([board_00003_00000,board_00003_00001],aux38)
sumgeq([board_00003_00000,board_00003_00001],aux38)
sumleq([board_00003_00002,board_00002_00001],aux39)
sumgeq([board_00003_00002,board_00002_00001],aux39)
sumleq([board_00001_00001,board_00001_00003],aux40)
sumgeq([board_00001_00001,board_00001_00003],aux40)
sumleq([board_00001_00001,board_00001_00002],aux41)
sumgeq([board_00001_00001,board_00001_00002],aux41)
sumleq([board_00001_00001,board_00001_00004],aux42)
sumgeq([board_00001_00001,board_00001_00004],aux42)
sumleq([board_00003_00000,board_00000_00003],aux43)
sumgeq([board_00003_00000,board_00000_00003],aux43)
sumleq([board_00001_00000,board_00002_00001],aux44)
sumgeq([board_00001_00000,board_00002_00001],aux44)
sumleq([board_00004_00001,board_00002_00003],aux45)
sumgeq([board_00004_00001,board_00002_00003],aux45)
sumleq([board_00000_00000,board_00002_00000],aux46)
sumgeq([board_00000_00000,board_00002_00000],aux46)
sumleq([board_00000_00003,board_00001_00003],aux47)
sumgeq([board_00000_00003,board_00001_00003],aux47)
sumleq([board_00002_00000,board_00002_00004],aux48)
sumgeq([board_00002_00000,board_00002_00004],aux48)
sumleq([board_00002_00002,board_00002_00003],aux49)
sumgeq([board_00002_00002,board_00002_00003],aux49)
sumleq([board_00000_00000,board_00002_00002],aux50)
sumgeq([board_00000_00000,board_00002_00002],aux50)
sumleq([board_00003_00002,board_00002_00002],aux51)
sumgeq([board_00003_00002,board_00002_00002],aux51)
sumleq([board_00003_00002,board_00002_00003],aux52)
sumgeq([board_00003_00002,board_00002_00003],aux52)
sumleq([board_00002_00001,board_00002_00003],aux53)
sumgeq([board_00002_00001,board_00002_00003],aux53)
sumleq([board_00003_00001,board_00000_00004],aux54)
sumgeq([board_00003_00001,board_00000_00004],aux54)
sumleq([board_00002_00003,board_00002_00004],aux55)
sumgeq([board_00002_00003,board_00002_00004],aux55)
sumleq([board_00003_00003,board_00002_00002],aux56)
sumgeq([board_00003_00003,board_00002_00002],aux56)
sumleq([board_00001_00000,board_00001_00002],aux57)
sumgeq([board_00001_00000,board_00001_00002],aux57)
sumleq([board_00001_00000,board_00001_00001],aux58)
sumgeq([board_00001_00000,board_00001_00001],aux58)
sumleq([board_00000_00001,board_00001_00002],aux59)
sumgeq([board_00000_00001,board_00001_00002],aux59)
sumleq([board_00003_00004,board_00001_00002],aux60)
sumgeq([board_00003_00004,board_00001_00002],aux60)
sumleq([board_00001_00000,board_00001_00004],aux61)
sumgeq([board_00001_00000,board_00001_00004],aux61)
sumleq([board_00000_00003,board_00000_00004],aux62)
sumgeq([board_00000_00003,board_00000_00004],aux62)
sumleq([board_00003_00004,board_00001_00004],aux63)
sumgeq([board_00003_00004,board_00001_00004],aux63)
sumleq([board_00003_00001,board_00003_00004],aux64)
sumgeq([board_00003_00001,board_00003_00004],aux64)
sumleq([board_00001_00000,board_00001_00003],aux65)
sumgeq([board_00001_00000,board_00001_00003],aux65)
sumleq([aux66,aux67,aux68,aux69,aux70,aux71,aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,aux88,aux89,aux90],aux91)
sumgeq([aux66,aux67,aux68,aux69,aux70,aux71,aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,aux88,aux89,aux90],aux91)
sumleq([board_00000_00003,board_00001_00002],aux92)
sumgeq([board_00000_00003,board_00001_00002],aux92)
sumleq([board_00002_00002,board_00002_00004],aux93)
sumgeq([board_00002_00002,board_00002_00004],aux93)
sumleq([board_00004_00000,board_00002_00000],aux94)
sumgeq([board_00004_00000,board_00002_00000],aux94)
sumleq([board_00003_00003,board_00002_00003],aux95)
sumgeq([board_00003_00003,board_00002_00003],aux95)
sumleq([board_00002_00001,board_00002_00004],aux96)
sumgeq([board_00002_00001,board_00002_00004],aux96)
sumleq([board_00003_00003,board_00002_00004],aux97)
sumgeq([board_00003_00003,board_00002_00004],aux97)
sumleq([board_00002_00000,board_00002_00003],aux98)
sumgeq([board_00002_00000,board_00002_00003],aux98)
sumleq([board_00003_00004,board_00000_00004],aux99)
sumgeq([board_00003_00004,board_00000_00004],aux99)
sumleq([board_00000_00000,board_00001_00001],aux100)
sumgeq([board_00000_00000,board_00001_00001],aux100)
sumleq([board_00000_00001,board_00000_00004],aux101)
sumgeq([board_00000_00001,board_00000_00004],aux101)
sumleq([board_00003_00000,board_00003_00003],aux102)
sumgeq([board_00003_00000,board_00003_00003],aux102)
sumleq([board_00003_00001,board_00003_00003],aux103)
sumgeq([board_00003_00001,board_00003_00003],aux103)
sumleq([board_00003_00003,board_00001_00003],aux104)
sumgeq([board_00003_00003,board_00001_00003],aux104)
sumleq([board_00003_00003,board_00001_00001],aux105)
sumgeq([board_00003_00003,board_00001_00001],aux105)
sumleq([board_00000_00001,board_00001_00001],aux106)
sumgeq([board_00000_00001,board_00001_00001],aux106)
sumleq([board_00001_00003,board_00001_00004],aux107)
sumgeq([board_00001_00003,board_00001_00004],aux107)
sumleq([board_00004_00001,board_00002_00001],aux108)
sumgeq([board_00004_00001,board_00002_00001],aux108)
sumleq([board_00000_00002,board_00001_00001],aux109)
sumgeq([board_00000_00002,board_00001_00001],aux109)
sumleq([board_00003_00000,board_00002_00000],aux110)
sumgeq([board_00003_00000,board_00002_00000],aux110)
sumleq([board_00003_00000,board_00002_00001],aux111)
sumgeq([board_00003_00000,board_00002_00001],aux111)
sumleq([board_00003_00001,board_00002_00000],aux112)
sumgeq([board_00003_00001,board_00002_00000],aux112)
sumleq([board_00000_00000,board_00001_00000],aux113)
sumgeq([board_00000_00000,board_00001_00000],aux113)
sumleq([board_00003_00004,board_00000_00001],aux114)
sumgeq([board_00003_00004,board_00000_00001],aux114)
sumleq([board_00003_00000,board_00003_00002],aux115)
sumgeq([board_00003_00000,board_00003_00002],aux115)
sumleq([board_00000_00001,board_00000_00003],aux116)
sumgeq([board_00000_00001,board_00000_00003],aux116)
sumleq([board_00004_00004,board_00002_00002],aux117)
sumgeq([board_00004_00004,board_00002_00002],aux117)
sumleq([board_00003_00002,board_00001_00000],aux118)
sumgeq([board_00003_00002,board_00001_00000],aux118)
sumleq([board_00003_00001,board_00003_00002],aux119)
sumgeq([board_00003_00001,board_00003_00002],aux119)
sumleq([board_00001_00000,board_00002_00000],aux120)
sumgeq([board_00001_00000,board_00002_00000],aux120)
sumleq([board_00003_00002,board_00001_00002],aux121)
sumgeq([board_00003_00002,board_00001_00002],aux121)
sumleq([board_00001_00002,board_00001_00004],aux122)
sumgeq([board_00001_00002,board_00001_00004],aux122)
sumleq([board_00000_00001,board_00001_00000],aux123)
sumgeq([board_00000_00001,board_00001_00000],aux123)
sumleq([board_00001_00002,board_00001_00003],aux124)
sumgeq([board_00001_00002,board_00001_00003],aux124)
sumleq([board_00004_00000,board_00001_00003],aux125)
sumgeq([board_00004_00000,board_00001_00003],aux125)
sumleq([board_00003_00002,board_00001_00004],aux126)
sumgeq([board_00003_00002,board_00001_00004],aux126)
sumleq([board_00004_00000,board_00002_00002],aux127)
sumgeq([board_00004_00000,board_00002_00002],aux127)
sumleq([board_00004_00001,board_00001_00004],aux128)
sumgeq([board_00004_00001,board_00001_00004],aux128)
sumleq([board_00002_00001,board_00002_00002],aux129)
sumgeq([board_00002_00001,board_00002_00002],aux129)
sumleq([board_00003_00001,board_00002_00001],aux130)
sumgeq([board_00003_00001,board_00002_00001],aux130)
sumleq([board_00003_00001,board_00002_00002],aux131)
sumgeq([board_00003_00001,board_00002_00002],aux131)
sumleq([board_00001_00004,board_00002_00004],aux132)
sumgeq([board_00001_00004,board_00002_00004],aux132)
sumleq([board_00004_00002,board_00001_00002],aux133)
sumgeq([board_00004_00002,board_00001_00002],aux133)
sumleq([board_00004_00004,board_00001_00001],aux134)
sumgeq([board_00004_00004,board_00001_00001],aux134)
sumleq([board_00004_00002,board_00002_00004],aux135)
sumgeq([board_00004_00002,board_00002_00004],aux135)
sumleq([board_00001_00003,board_00002_00004],aux136)
sumgeq([board_00001_00003,board_00002_00004],aux136)
sumleq([board_00004_00004,board_00002_00004],aux137)
sumgeq([board_00004_00004,board_00002_00004],aux137)
sumleq([board_00004_00004,board_00000_00004],aux138)
sumgeq([board_00004_00004,board_00000_00004],aux138)
sumleq([board_00003_00002,board_00003_00004],aux139)
sumgeq([board_00003_00002,board_00003_00004],aux139)
sumleq([board_00004_00004,board_00000_00000],aux140)
sumgeq([board_00004_00004,board_00000_00000],aux140)
sumleq([board_00003_00000,board_00000_00000],aux141)
sumgeq([board_00003_00000,board_00000_00000],aux141)
sumleq([board_00000_00001,board_00000_00002],aux142)
sumgeq([board_00000_00001,board_00000_00002],aux142)
sumleq([board_00004_00002,board_00004_00003],aux143)
sumgeq([board_00004_00002,board_00004_00003],aux143)
sumleq([board_00004_00002,board_00004_00004],aux144)
sumgeq([board_00004_00002,board_00004_00004],aux144)
sumleq([board_00001_00004,board_00002_00003],aux145)
sumgeq([board_00001_00004,board_00002_00003],aux145)
sumleq([board_00001_00003,board_00002_00003],aux146)
sumgeq([board_00001_00003,board_00002_00003],aux146)
sumleq([board_00000_00004,board_00001_00003],aux147)
sumgeq([board_00000_00004,board_00001_00003],aux147)
sumleq([board_00004_00003,board_00000_00003],aux148)
sumgeq([board_00004_00003,board_00000_00003],aux148)
sumleq([board_00004_00000,board_00001_00000],aux149)
sumgeq([board_00004_00000,board_00001_00000],aux149)
sumleq([board_00003_00000,board_00003_00004],aux150)
sumgeq([board_00003_00000,board_00003_00004],aux150)
sumleq([board_00001_00002,board_00002_00003],aux151)
sumgeq([board_00001_00002,board_00002_00003],aux151)
sumleq([board_00004_00001,board_00004_00002],aux152)
sumgeq([board_00004_00001,board_00004_00002],aux152)
sumleq([board_00004_00001,board_00004_00003],aux153)
sumgeq([board_00004_00001,board_00004_00003],aux153)
sumleq([board_00004_00003,board_00001_00003],aux154)
sumgeq([board_00004_00003,board_00001_00003],aux154)
sumleq([board_00004_00001,board_00004_00004],aux155)
sumgeq([board_00004_00001,board_00004_00004],aux155)
sumleq([board_00002_00000,board_00002_00002],aux156)
sumgeq([board_00002_00000,board_00002_00002],aux156)
sumleq([board_00000_00004,board_00001_00004],aux157)
sumgeq([board_00000_00004,board_00001_00004],aux157)
sumleq([board_00001_00003,board_00002_00002],aux158)
sumgeq([board_00001_00003,board_00002_00002],aux158)
sumleq([board_00001_00001,board_00002_00002],aux159)
sumgeq([board_00001_00001,board_00002_00002],aux159)
sumleq([board_00000_00002,board_00000_00004],aux160)
sumgeq([board_00000_00002,board_00000_00004],aux160)
sumleq([board_00004_00004,board_00001_00004],aux161)
sumgeq([board_00004_00004,board_00001_00004],aux161)
sumleq([board_00004_00002,board_00000_00002],aux162)
sumgeq([board_00004_00002,board_00000_00002],aux162)
sumleq([board_00003_00000,board_00004_00000],aux163)
sumgeq([board_00003_00000,board_00004_00000],aux163)
sumleq([board_00004_00001,board_00001_00001],aux164)
sumgeq([board_00004_00001,board_00001_00001],aux164)
sumleq([board_00002_00000,board_00002_00001],aux165)
sumgeq([board_00002_00000,board_00002_00001],aux165)
sumleq([board_00004_00003,board_00001_00000],aux166)
sumgeq([board_00004_00003,board_00001_00000],aux166)
sumleq([board_00001_00001,board_00002_00001],aux167)
sumgeq([board_00001_00001,board_00002_00001],aux167)
sumleq([board_00000_00002,board_00000_00003],aux168)
sumgeq([board_00000_00002,board_00000_00003],aux168)
sumleq([board_00004_00001,board_00000_00001],aux169)
sumgeq([board_00004_00001,board_00000_00001],aux169)
sumleq([board_00003_00003,board_00000_00000],aux170)
sumgeq([board_00003_00003,board_00000_00000],aux170)
sumleq([board_00004_00003,board_00004_00004],aux171)
sumgeq([board_00004_00003,board_00004_00004],aux171)
sumleq([board_00003_00001,board_00000_00001],aux172)
sumgeq([board_00003_00001,board_00000_00001],aux172)
sumleq([board_00004_00002,board_00002_00000],aux173)
sumgeq([board_00004_00002,board_00002_00000],aux173)
sumleq([board_00003_00002,board_00004_00002],aux174)
sumgeq([board_00003_00002,board_00004_00002],aux174)
sumleq([board_00004_00000,board_00000_00004],aux175)
sumgeq([board_00004_00000,board_00000_00004],aux175)
sumleq([board_00003_00004,board_00004_00003],aux176)
sumgeq([board_00003_00004,board_00004_00003],aux176)
sumleq([board_00003_00001,board_00004_00002],aux177)
sumgeq([board_00003_00001,board_00004_00002],aux177)
sumleq([board_00003_00003,board_00003_00004],aux178)
sumgeq([board_00003_00003,board_00003_00004],aux178)
sumleq([board_00004_00000,board_00000_00000],aux179)
sumgeq([board_00004_00000,board_00000_00000],aux179)
sumleq([board_00001_00001,board_00002_00000],aux180)
sumgeq([board_00001_00001,board_00002_00000],aux180)
sumleq([board_00003_00002,board_00004_00001],aux181)
sumgeq([board_00003_00002,board_00004_00001],aux181)
sumleq([aux182,aux183,aux184,aux185,aux186,aux187,aux188,aux189,aux190,aux191,aux192,aux193,aux194,aux195,aux196,aux197,aux198,aux199,aux200,aux201,aux202,aux203,aux204,aux205,aux206],aux207)
sumgeq([aux182,aux183,aux184,aux185,aux186,aux187,aux188,aux189,aux190,aux191,aux192,aux193,aux194,aux195,aux196,aux197,aux198,aux199,aux200,aux201,aux202,aux203,aux204,aux205,aux206],aux207)
sumleq([board_00003_00003,board_00000_00003],aux208)
sumgeq([board_00003_00003,board_00000_00003],aux208)
sumleq([board_00003_00001,board_00004_00001],aux209)
sumgeq([board_00003_00001,board_00004_00001],aux209)
sumleq([board_00004_00003,board_00002_00003],aux210)
sumgeq([board_00004_00003,board_00002_00003],aux210)
sumleq([board_00003_00004,board_00004_00004],aux211)
sumgeq([board_00003_00004,board_00004_00004],aux211)
sumleq([board_00003_00000,board_00004_00001],aux212)
sumgeq([board_00003_00000,board_00004_00001],aux212)
sumleq([board_00003_00002,board_00000_00002],aux213)
sumgeq([board_00003_00002,board_00000_00002],aux213)
sumleq([board_00004_00002,board_00002_00002],aux214)
sumgeq([board_00004_00002,board_00002_00002],aux214)
sumleq([board_00003_00001,board_00004_00000],aux215)
sumgeq([board_00003_00001,board_00004_00000],aux215)
sumleq([board_00004_00000,board_00004_00004],aux216)
sumgeq([board_00004_00000,board_00004_00004],aux216)
sumleq([board_00004_00000,board_00004_00003],aux217)
sumgeq([board_00004_00000,board_00004_00003],aux217)
sumleq([board_00001_00002,board_00002_00002],aux218)
sumgeq([board_00001_00002,board_00002_00002],aux218)
sumleq([board_00004_00000,board_00004_00002],aux219)
sumgeq([board_00004_00000,board_00004_00002],aux219)
sumleq([board_00004_00000,board_00004_00001],aux220)
sumgeq([board_00004_00000,board_00004_00001],aux220)
sumleq([board_00003_00003,board_00004_00002],aux221)
sumgeq([board_00003_00003,board_00004_00002],aux221)
sumleq([board_00003_00002,board_00004_00003],aux222)
sumgeq([board_00003_00002,board_00004_00003],aux222)
sumleq([board_00004_00003,board_00002_00001],aux223)
sumgeq([board_00004_00003,board_00002_00001],aux223)
sumleq([board_00001_00002,board_00002_00001],aux224)
sumgeq([board_00001_00002,board_00002_00001],aux224)
sumleq([board_00003_00002,board_00003_00003],aux225)
sumgeq([board_00003_00002,board_00003_00003],aux225)
**EOF**
