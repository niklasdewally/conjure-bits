$$ param file: hakank/hidato3.param

language ESSENCE' 1.0

$ Problem from the book:
$ Gyora Bededek: "Hidato: 2000 Pure Logic Puzzles"
$ problem 1 (Practice)

letting n be 5
letting puzzle be
    [ 
     [  0, 0,20, 0, 0],
     [  0, 0, 0,16,18],
     [ 22, 0,15, 0, 0],
     [ 23, 0, 1,14,11],
     [  0,25, 0, 0,12]
    ]
 
$$ model file: hakank/hidato.eprime

$ given n : int(1..100)
$ given puzzle : matrix indexed by [int(1..n),int(1..n)] of int(0..(n * n))
letting AB be ((int((-1)) union int(0)) union int(1))
find x : matrix indexed by [int(1..n),int(1..n)] of int(1..(n * n))
such that
allDiff(flatten(x)),
(forAll i : int(1..n) . (forAll j : int(1..n) . ((0<puzzle[i, j]) -> (x[i, j]=puzzle[i, j])))),
(forAll k : int(1..((n * n) - 1)) . (exists i : int(1..n) . (exists j : int(1..n) . ((k=x[i, j]) /\ (exists a : AB . (exists b : AB . ((((((1<=(i + a)) /\ (1<=(j + b))) /\ ((i + a)<=n)) /\ ((j + b)<=n)) /\ (!((((a=0)) /\ ((b=0)))))) /\ ((k + 1)=x[(i + a), (j + b)]))))))))
