$
$ Labeled dice problem in Essence'.
$
$ From Jim Orlin "Colored letters, labeled dice: a logic puzzle"
$ http://jimorlin.wordpress.com/2009/02/17/colored-letters-labeled-dice-a-logic-puzzle/
$   """
$   My daughter Jenn bough a puzzle book, and showed me a cute puzzle.  There 
$   are 13 words as follows:  BUOY, CAVE, CELT, FLUB, FORK, HEMP, JUDY, 
$   JUNK, LIMN, QUIP, SWAG, VISA, WISH.
$
$   There are 24 different letters that appear in the 13 words.  The question 
$   is:  can one assign the 24 letters to 4 different cubes so that the 
$   four letters of each word appears on different cubes.  (There is one 
$   letter from each word on each cube.)  It might be fun for you to try 
$   it.  I'll give a small hint at the end of this post. The puzzle was 
$   created by Humphrey Dudley.
$   """
$
$
$ Model created by Hakan Kjellerstrand, hakank@gmail.com
$ See also my Essence'/Savile Row page: http://www.hakank.org/savile_row/
$
language ESSENCE' 1.0

letting n be 4
letting Cube be domain int(1..n)
letting num_words be 13
letting Words be domain int(1..num_words)
letting num_letters be 24
letting Letters be domain int(1..num_letters)

letting A be 1
letting B be 2
letting C be 3
letting D be 4
letting E be 5
letting F be 6
letting G be 7
letting H be 8
letting I be 9
letting J be 10
letting K be 11
letting L be 12
letting M be 13
letting N be 14
letting O be 15
letting P be 16
letting Q be 17
letting R be 18
letting S be 19
letting T be 20
letting U be 21
letting V be 22
letting W be 23
letting Y be 24

letting words = 
  [
   [B,U,O,Y],
   [C,A,V,E], 
   [C,E,L,T], 
   [F,L,U,B], 
   [F,O,R,K], 
   [H,E,M,P], 
   [J,U,D,Y], 
   [J,U,N,K], 
   [L,I,M,N], 
   [Q,U,I,P], 
   [S,W,A,G], 
   [V,I,S,A], 
   [W,I,S,H]
  ]

$ decision variables
find dice: matrix indexed by [Letters] of Cube

such that
  $ the letters in a word must be on a different die
  forAll i: Words . allDiff([dice[words[i,j]] | j: Cube]),

  $ there must be exactly 6 letters of each die
  forAll i: Cube . (sum j: Letters .  dice[j] = i) = 6,

  $ symmetry breaking (otherwise it's 24 solutions)
  dice[ 1] <= dice[ 7],
  dice[ 7] <= dice[13],
  dice[13] <= dice[19]
