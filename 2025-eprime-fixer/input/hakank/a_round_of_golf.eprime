$
$ A Round of Golf puzzle (Dell Logic Puzzles) in Essence'.
$
$ From http://brownbuffalo.sourceforge.net/RoundOfGolfClues.html
$ """
$ Title: A Round of Golf
$ Author: Ellen K. Rodehorst
$ Publication: Dell Favorite Logic Problems
$ Issue: Summer, 2000
$ Puzzle #: 9
$ Stars: 1
$
$ When the Sunny Hills Country Club golf course isn't in use by club members, 
$ of course, it's open to the club's employees. Recently, Jack and three other 
$ workers at the golf course got together on their day off to play a round of 
$ eighteen holes of golf. 
$ Afterward, all four, including Mr. Green, went to the clubhouse to total 
$ their scorecards. Each man works at a different job (one is a short-order 
$ cook), and each shot a different score in the game. No one scored below 
$ 70 or above 85 strokes. From the clues below, can you discover each man's 
$ full name, job and golf score?
$ 
$ 1. Bill, who is not the maintenance man, plays golf often and had the lowest 
$ score of the foursome.
$ 2. Mr. Clubb, who isn't Paul, hit several balls into the woods and scored ten 
$ strokes more than the pro-shop clerk.
$ 3. In some order, Frank and the caddy scored four and seven more strokes than 
$ Mr. Sands.
$ 4. Mr. Carter thought his score of 78 was one of his better games, even 
$    though Frank's score  was lower.
$ 5. None of the four scored exactly 81 strokes.
$ 
$ Determine: First Name - Last Name - Job - Score 
$ """
$
$ Model created by Hakan Kjellerstrand, hakank@gmail.com
$ See also my Essence'/Tailor page: http://www.hakank.org/savile_row/
$
language ESSENCE' 1.0

letting n be 4

letting Jack be 1
letting Bill be 2
letting Paul be 3
letting Frank be 4

letting R be domain int(1..n)

find Green, Clubb, Sands, Carter: R
find last_name: matrix indexed by [int(1..n)] of R

find cook, maintenance_man, clerk, caddy: R
find job: matrix indexed by [int(1..n)] of R

find score: matrix indexed by [int(1..n)] of int(70..85)

such that
   
   last_name[1] = Green, last_name[2] = Clubb, last_name[3] = Sands, last_name[4] = Carter,
   job[1] = cook, job[2] = maintenance_man, job[3] = clerk, job[4] = caddy,

   allDiff(last_name),
   allDiff(job),
   allDiff(score),

   $ 1. Bill, who is not the maintenance man, plays golf often and had 
   $ the lowest score of the foursome.
   Bill != maintenance_man,
   score[Bill] < score[Jack],
   score[Bill] < score[Paul],
   score[Bill] < score[Frank],
 
   $ 2. Mr. Clubb, who isn't Paul, hit several balls into the woods and 
   $    scored ten strokes more than the pro-shop clerk.
   Clubb != Paul,
   score[Clubb] = score[clerk] + 10,
   
   $ 3. In some order, Frank and the caddy scored four and seven more 
   $    strokes than Mr. Sands.
   Frank != caddy,
   Frank != Sands,
   caddy != Sands,
   (
    (score[Frank] = score[Sands] + 4 /\
     score[caddy] = score[Sands] + 7 )
    \/
    (score[Frank] = score[Sands] + 7 /\
     score[caddy] = score[Sands] + 4 )
   ),

   $ 4. Mr. Carter thought his score of 78 was one of his better games, even 
   $ though Frank's score was lower.
   Frank != Carter,
   score[Carter] = 78,
   score[Frank] < score[Carter],

   $ 5. None of the four scored exactly 81 strokes.
   forall i : R . score[i] != 81

