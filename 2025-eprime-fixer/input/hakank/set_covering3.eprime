$
$ Another set covering problem in Essence'.
$
$ Problem from 
$ Katta G. Murty: "Optimization Models for Decision Making", page 302f
$ http://ioe.engin.umich.edu/people/fac/books/murty/opti_model/junior-7.pdf
$ 
$ 10 senators making a committee, where there must at least be one 
$ representative from each group:
$ group:        senators:
$ southern      1 2 3 4 5
$ northern      6 7 8 9 10
$ liberals      2 3 8 9 10
$ conservative  1 5 6 7
$ democrats     3 4 5 6 7 9
$ republicans   1 2 8 10
$
$
$ Model created by Hakan Kjellerstrand, hakank@gmail.com
$ See also my Essence'/Tailor page: http://www.hakank.org/savile_row/
$
language ESSENCE' 1.0

letting num_groups be 6
letting num_senators be 10
letting belongs: matrix indexed by [int(1..num_groups), int(1..num_senators)] of int(0..1) be 
   [[1, 1, 1, 1, 1, 0, 0, 0, 0, 0],   $ 1 southern
    [0, 0, 0, 0, 0, 1, 1, 1, 1, 1],   $ 2 northern
    [0, 1, 1, 0, 0, 0, 0, 1, 1, 1],   $ 3 liberals
    [1, 0, 0, 0, 1, 1, 1, 0, 0, 0],   $ 4 conservative
    [0, 0, 1, 1, 1, 1, 1, 0, 1, 0],   $ 5 democrats
    [1, 1, 0, 0, 0, 0, 0, 1, 0, 1]]   $ 6 republicans

find x: matrix indexed by [int(1..num_senators)] of int(0..1)
find z: int(1..num_senators)

minimising z

such that
   forall i: int(1..num_groups) .
      (sum j: int(1..num_senators) . x[j]*belongs[i,j]) >= 1
   ,
   z = sum j: int(1..num_senators) . x[j]




   
