language ESSENCE' 1.0
letting n be 16
letting num_sets be 2
find a : matrix indexed by [int(1..n)] of int(1..num_sets)
find sums : matrix indexed by [int(1..num_sets)] of int(0..(n * n))
find sums_squared : matrix indexed by [int(1..num_sets)] of int(0..(((n * n) * n) * n))
such that
(forAll i : int(1..num_sets) . ((sums[i]=((sum j : int(1..n) . (j * ((a[j]=i)))))) /\ (sums_squared[i]=(sum j : int(1..n) . ((j**2) * ((a[j]=i))))))),
(forAll i : int(2..num_sets) . (((((sum j : int(1..n) . (a[j]=(i - 1))))=((sum j : int(1..n) . (a[j]=i)))) /\ (sums[(i - 1)]=sums[i])) /\ (sums_squared[(i - 1)]=sums_squared[i]))),
(a[1]=1)
