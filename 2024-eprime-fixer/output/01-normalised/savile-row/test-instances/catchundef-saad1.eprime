language ESSENCE' 1.0
letting weights be [0, 1, 2, 3, 4, 5;int(0..5)]
find setSize : int(1..5)
find setValues : matrix indexed by [int(1..5)] of int(0..5)
find setWeight : int(0..sum(weights))
such that
(forAll i : int(1..5) . ((((setSize<i) <-> (setValues[i]=0))) /\ (((i<setSize) -> (setValues[i]<setValues[(i + 1)]))))),
(1<setSize),
(setWeight=(sum i : int(1..5) . (catchUndef(weights[setValues[i]], 0) * toInt((i<=setSize)))))
