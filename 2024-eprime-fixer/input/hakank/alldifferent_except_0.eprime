$ Alldifferent except 0 in Essence'.
$
$   Decomposition of the global constraint alldifferent except 0.
$ 
$   From Global constraint catalogue:
$   http://www.emn.fr/x-info/sdemasse/gccat/sec4.6.html
$   """ 
$   Enforce all variables of the collection VARIABLES to take distinct values, except those 
$   variables that are assigned to 0.
$
$   Example
$     (<5, 0, 1, 9, 0, 3>)
$
$   The alldifferent_except_0 constraint holds since all the values (that are different from 0) 
$   5, 1, 9 and 3 are distinct.
$   """
$
$ Note: Essence' don't have predicates.
$
$ Compare with the following models: 
$ * Comet: http://www.hakank.org/comet/alldifferent_except_0.co
$ * ECLiPSE: http://www.hakank.org/eclipse/alldifferent_except_0.ecl
$ * Gecode: http://www.hakank.org/gecode/alldifferent_except_0.cpp
$ * Gecode/R: http://www.hakank.org/gecode_r/all_different_except_0.rb
$ * MiniZinc: http://www.hakank.org/minizinc/alldifferent_except_0.mzn
$ * Choco: http://www.hakank.org/choco/AllDifferentExcept0_test.java
$ * JaCoP: http://www.hakank.org/JaCoP/AllDifferentExcept0_test.java
$
$
$ Model created by Hakan Kjellerstrand, hakank@gmail.com
$ See also my Essence'/Tailor page: http://www.hakank.org/savile_row/
language ESSENCE' 1.0

letting n be 6
$ given n : int

find x : matrix indexed by [int(1..n)] of int(0..9)
find z : int(0..10000) $ number of zeros in x

such that
   z = (sum i : int(1..n) . x[i] = 0),

   z = 2, $ number of 0's in x

   $ all different except 0
   forall i,j : int(1..n) . (
      (i != j) => 
        (((x[i] != 0) /\ (x[j] != 0)) => (x[i] != x[j]))
   ),

   $ symmetry breaking sorted
   forall i : int(2..n) . 
      x[i-1] <= x[i]
      

   
