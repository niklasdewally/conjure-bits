$
$ Langford's number problem (CSP lib problem 24) in Savile Row.
$
$ Arrange 2 sets of positive integers 1..k to a sequence,
$ such that, following the first occurence of an integer i, 
$ each subsequent occurrence of i, appears i+1 indices later
$ than the last. 
$ For example, for k=4, a solution would be 41312432
$
$ Inspired from Tailor's examples/langford.eprime
$ Added: symmetry breaking and output of the solution.
$
$ Model created by Hakan Kjellerstrand, hakank@gmail.com
$ See also my Essence'/Tailor page: http://www.hakank.org/savile_row/
$


language ESSENCE' 1.0

$ given k : int
letting k be 11
letting positionDomain be domain int(1..2*k)

$ k must be either 0 or 3 modulo 4
where k % 4 = 0 \/ k % 4 = 3

find solution : matrix indexed by [positionDomain] of int(1..k)
find position : matrix indexed by [positionDomain] of positionDomain

such that 
   forall i : int(1..k) .
      position[i+k] = position[i] + i+1 /\
      solution[position[i]] = i /\
      solution[position[k+i]] = i
   ,
   allDiff(position),
   position[1] > position[2*k] $ hakank: symmetry breaking
   
   

   

