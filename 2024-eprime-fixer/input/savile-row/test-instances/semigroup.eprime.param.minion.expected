MINION 3
**VARIABLES**
DISCRETE M_00000_00000 #
{1..5}
DISCRETE M_00000_00001 #
{1..5}
DISCRETE M_00000_00002 #
{1..5}
DISCRETE M_00000_00003 #
{1..5}
DISCRETE M_00000_00004 #
{1..5}
DISCRETE M_00001_00000 #
{1..5}
DISCRETE M_00001_00001 #
{1..5}
DISCRETE M_00001_00002 #
{1..5}
DISCRETE M_00001_00003 #
{1..5}
DISCRETE M_00001_00004 #
{1..5}
DISCRETE M_00002_00000 #
{1..5}
DISCRETE M_00002_00001 #
{1..5}
DISCRETE M_00002_00002 #
{1..5}
DISCRETE M_00002_00003 #
{1..5}
DISCRETE M_00002_00004 #
{1..5}
DISCRETE M_00003_00000 #
{1..5}
DISCRETE M_00003_00001 #
{1..5}
DISCRETE M_00003_00002 #
{1..5}
DISCRETE M_00003_00003 #
{1..5}
DISCRETE M_00003_00004 #
{1..5}
DISCRETE M_00004_00000 #
{1..5}
DISCRETE M_00004_00001 #
{1..5}
DISCRETE M_00004_00002 #
{1..5}
DISCRETE M_00004_00003 #
{1..5}
DISCRETE M_00004_00004 #
{1..5}
DISCRETE aux0 #CSE: 10 occurrences of: (M[0, 4]-1)
{0..4}
DISCRETE aux1 #CSE: 10 occurrences of: (M[0, 2]-1)
{0..4}
DISCRETE aux2 #CSE: 10 occurrences of: (M[4, 1]-1)
{0..4}
DISCRETE aux3 #CSE: 10 occurrences of: (M[2, 0]-1)
{0..4}
DISCRETE aux4 #CSE: 10 occurrences of: (M[3, 3]-1)
{0..4}
DISCRETE aux5 #CSE: 10 occurrences of: (M[1, 4]-1)
{0..4}
DISCRETE aux6 #CSE: 10 occurrences of: (M[1, 3]-1)
{0..4}
DISCRETE aux7 #CSE: 10 occurrences of: (M[0, 0]-1)
{0..4}
DISCRETE aux8 #CSE: 10 occurrences of: (M[2, 3]-1)
{0..4}
DISCRETE aux9 #CSE: 10 occurrences of: (M[1, 1]-1)
{0..4}
DISCRETE aux10 #CSE: 10 occurrences of: (M[4, 0]-1)
{0..4}
DISCRETE aux11 #CSE: 10 occurrences of: (M[3, 1]-1)
{0..4}
DISCRETE aux12 #CSE: 10 occurrences of: (M[3, 4]-1)
{0..4}
DISCRETE aux13 #CSE: 10 occurrences of: (M[1, 2]-1)
{0..4}
DISCRETE aux14 #CSE: 10 occurrences of: (M[4, 2]-1)
{0..4}
DISCRETE aux15 #CSE: 10 occurrences of: (M[4, 4]-1)
{0..4}
DISCRETE aux16 #CSE: 10 occurrences of: (M[1, 0]-1)
{0..4}
DISCRETE aux17 #CSE: 10 occurrences of: (M[2, 1]-1)
{0..4}
DISCRETE aux18 #CSE: 10 occurrences of: (M[2, 2]-1)
{0..4}
DISCRETE aux19 #CSE: 10 occurrences of: (M[4, 3]-1)
{0..4}
DISCRETE aux20 #CSE: 10 occurrences of: (M[0, 3]-1)
{0..4}
DISCRETE aux21 #CSE: 10 occurrences of: (M[3, 2]-1)
{0..4}
DISCRETE aux22 #CSE: 10 occurrences of: (M[2, 4]-1)
{0..4}
DISCRETE aux23 #CSE: 10 occurrences of: (M[0, 1]-1)
{0..4}
DISCRETE aux24 #CSE: 10 occurrences of: (M[3, 0]-1)
{0..4}
DISCRETE aux25 #Element(flatten(M[0,int(..)]), aux7) --- Element(flatten(M[int(..),0]), aux7)
{1..5}
DISCRETE aux26 #Element(flatten(M[0,int(..)]), aux23) --- Element(flatten(M[int(..),1]), aux7)
{1..5}
DISCRETE aux27 #Element(flatten(M[0,int(..)]), aux1) --- Element(flatten(M[int(..),2]), aux7)
{1..5}
DISCRETE aux28 #Element(flatten(M[0,int(..)]), aux20) --- Element(flatten(M[int(..),3]), aux7)
{1..5}
DISCRETE aux29 #Element(flatten(M[0,int(..)]), aux0) --- Element(flatten(M[int(..),4]), aux7)
{1..5}
DISCRETE aux30 #Element(flatten(M[0,int(..)]), aux16) --- Element(flatten(M[int(..),0]), aux23)
{1..5}
DISCRETE aux31 #Element(flatten(M[0,int(..)]), aux9) --- Element(flatten(M[int(..),1]), aux23)
{1..5}
DISCRETE aux32 #Element(flatten(M[0,int(..)]), aux13) --- Element(flatten(M[int(..),2]), aux23)
{1..5}
DISCRETE aux33 #Element(flatten(M[0,int(..)]), aux6) --- Element(flatten(M[int(..),3]), aux23)
{1..5}
DISCRETE aux34 #Element(flatten(M[0,int(..)]), aux5) --- Element(flatten(M[int(..),4]), aux23)
{1..5}
DISCRETE aux35 #Element(flatten(M[0,int(..)]), aux3) --- Element(flatten(M[int(..),0]), aux1)
{1..5}
DISCRETE aux36 #Element(flatten(M[0,int(..)]), aux17) --- Element(flatten(M[int(..),1]), aux1)
{1..5}
DISCRETE aux37 #Element(flatten(M[0,int(..)]), aux18) --- Element(flatten(M[int(..),2]), aux1)
{1..5}
DISCRETE aux38 #Element(flatten(M[0,int(..)]), aux8) --- Element(flatten(M[int(..),3]), aux1)
{1..5}
DISCRETE aux39 #Element(flatten(M[0,int(..)]), aux22) --- Element(flatten(M[int(..),4]), aux1)
{1..5}
DISCRETE aux40 #Element(flatten(M[0,int(..)]), aux24) --- Element(flatten(M[int(..),0]), aux20)
{1..5}
DISCRETE aux41 #Element(flatten(M[0,int(..)]), aux11) --- Element(flatten(M[int(..),1]), aux20)
{1..5}
DISCRETE aux42 #Element(flatten(M[0,int(..)]), aux21) --- Element(flatten(M[int(..),2]), aux20)
{1..5}
DISCRETE aux43 #Element(flatten(M[0,int(..)]), aux4) --- Element(flatten(M[int(..),3]), aux20)
{1..5}
DISCRETE aux44 #Element(flatten(M[0,int(..)]), aux12) --- Element(flatten(M[int(..),4]), aux20)
{1..5}
DISCRETE aux45 #Element(flatten(M[0,int(..)]), aux10) --- Element(flatten(M[int(..),0]), aux0)
{1..5}
DISCRETE aux46 #Element(flatten(M[0,int(..)]), aux2) --- Element(flatten(M[int(..),1]), aux0)
{1..5}
DISCRETE aux47 #Element(flatten(M[0,int(..)]), aux14) --- Element(flatten(M[int(..),2]), aux0)
{1..5}
DISCRETE aux48 #Element(flatten(M[0,int(..)]), aux19) --- Element(flatten(M[int(..),3]), aux0)
{1..5}
DISCRETE aux49 #Element(flatten(M[0,int(..)]), aux15) --- Element(flatten(M[int(..),4]), aux0)
{1..5}
DISCRETE aux50 #Element(flatten(M[1,int(..)]), aux7) --- Element(flatten(M[int(..),0]), aux16)
{1..5}
DISCRETE aux51 #Element(flatten(M[1,int(..)]), aux23) --- Element(flatten(M[int(..),1]), aux16)
{1..5}
DISCRETE aux52 #Element(flatten(M[1,int(..)]), aux1) --- Element(flatten(M[int(..),2]), aux16)
{1..5}
DISCRETE aux53 #Element(flatten(M[1,int(..)]), aux20) --- Element(flatten(M[int(..),3]), aux16)
{1..5}
DISCRETE aux54 #Element(flatten(M[1,int(..)]), aux0) --- Element(flatten(M[int(..),4]), aux16)
{1..5}
DISCRETE aux55 #Element(flatten(M[1,int(..)]), aux16) --- Element(flatten(M[int(..),0]), aux9)
{1..5}
DISCRETE aux56 #Element(flatten(M[1,int(..)]), aux9) --- Element(flatten(M[int(..),1]), aux9)
{1..5}
DISCRETE aux57 #Element(flatten(M[1,int(..)]), aux13) --- Element(flatten(M[int(..),2]), aux9)
{1..5}
DISCRETE aux58 #Element(flatten(M[1,int(..)]), aux6) --- Element(flatten(M[int(..),3]), aux9)
{1..5}
DISCRETE aux59 #Element(flatten(M[1,int(..)]), aux5) --- Element(flatten(M[int(..),4]), aux9)
{1..5}
DISCRETE aux60 #Element(flatten(M[1,int(..)]), aux3) --- Element(flatten(M[int(..),0]), aux13)
{1..5}
DISCRETE aux61 #Element(flatten(M[1,int(..)]), aux17) --- Element(flatten(M[int(..),1]), aux13)
{1..5}
DISCRETE aux62 #Element(flatten(M[1,int(..)]), aux18) --- Element(flatten(M[int(..),2]), aux13)
{1..5}
DISCRETE aux63 #Element(flatten(M[1,int(..)]), aux8) --- Element(flatten(M[int(..),3]), aux13)
{1..5}
DISCRETE aux64 #Element(flatten(M[1,int(..)]), aux22) --- Element(flatten(M[int(..),4]), aux13)
{1..5}
DISCRETE aux65 #Element(flatten(M[1,int(..)]), aux24) --- Element(flatten(M[int(..),0]), aux6)
{1..5}
DISCRETE aux66 #Element(flatten(M[1,int(..)]), aux11) --- Element(flatten(M[int(..),1]), aux6)
{1..5}
DISCRETE aux67 #Element(flatten(M[1,int(..)]), aux21) --- Element(flatten(M[int(..),2]), aux6)
{1..5}
DISCRETE aux68 #Element(flatten(M[1,int(..)]), aux4) --- Element(flatten(M[int(..),3]), aux6)
{1..5}
DISCRETE aux69 #Element(flatten(M[1,int(..)]), aux12) --- Element(flatten(M[int(..),4]), aux6)
{1..5}
DISCRETE aux70 #Element(flatten(M[1,int(..)]), aux10) --- Element(flatten(M[int(..),0]), aux5)
{1..5}
DISCRETE aux71 #Element(flatten(M[1,int(..)]), aux2) --- Element(flatten(M[int(..),1]), aux5)
{1..5}
DISCRETE aux72 #Element(flatten(M[1,int(..)]), aux14) --- Element(flatten(M[int(..),2]), aux5)
{1..5}
DISCRETE aux73 #Element(flatten(M[1,int(..)]), aux19) --- Element(flatten(M[int(..),3]), aux5)
{1..5}
DISCRETE aux74 #Element(flatten(M[1,int(..)]), aux15) --- Element(flatten(M[int(..),4]), aux5)
{1..5}
DISCRETE aux75 #Element(flatten(M[2,int(..)]), aux7) --- Element(flatten(M[int(..),0]), aux3)
{1..5}
DISCRETE aux76 #Element(flatten(M[2,int(..)]), aux23) --- Element(flatten(M[int(..),1]), aux3)
{1..5}
DISCRETE aux77 #Element(flatten(M[2,int(..)]), aux1) --- Element(flatten(M[int(..),2]), aux3)
{1..5}
DISCRETE aux78 #Element(flatten(M[2,int(..)]), aux20) --- Element(flatten(M[int(..),3]), aux3)
{1..5}
DISCRETE aux79 #Element(flatten(M[2,int(..)]), aux0) --- Element(flatten(M[int(..),4]), aux3)
{1..5}
DISCRETE aux80 #Element(flatten(M[2,int(..)]), aux16) --- Element(flatten(M[int(..),0]), aux17)
{1..5}
DISCRETE aux81 #Element(flatten(M[2,int(..)]), aux9) --- Element(flatten(M[int(..),1]), aux17)
{1..5}
DISCRETE aux82 #Element(flatten(M[2,int(..)]), aux13) --- Element(flatten(M[int(..),2]), aux17)
{1..5}
DISCRETE aux83 #Element(flatten(M[2,int(..)]), aux6) --- Element(flatten(M[int(..),3]), aux17)
{1..5}
DISCRETE aux84 #Element(flatten(M[2,int(..)]), aux5) --- Element(flatten(M[int(..),4]), aux17)
{1..5}
DISCRETE aux85 #Element(flatten(M[2,int(..)]), aux3) --- Element(flatten(M[int(..),0]), aux18)
{1..5}
DISCRETE aux86 #Element(flatten(M[2,int(..)]), aux17) --- Element(flatten(M[int(..),1]), aux18)
{1..5}
DISCRETE aux87 #Element(flatten(M[2,int(..)]), aux18) --- Element(flatten(M[int(..),2]), aux18)
{1..5}
DISCRETE aux88 #Element(flatten(M[2,int(..)]), aux8) --- Element(flatten(M[int(..),3]), aux18)
{1..5}
DISCRETE aux89 #Element(flatten(M[2,int(..)]), aux22) --- Element(flatten(M[int(..),4]), aux18)
{1..5}
DISCRETE aux90 #Element(flatten(M[2,int(..)]), aux24) --- Element(flatten(M[int(..),0]), aux8)
{1..5}
DISCRETE aux91 #Element(flatten(M[2,int(..)]), aux11) --- Element(flatten(M[int(..),1]), aux8)
{1..5}
DISCRETE aux92 #Element(flatten(M[2,int(..)]), aux21) --- Element(flatten(M[int(..),2]), aux8)
{1..5}
DISCRETE aux93 #Element(flatten(M[2,int(..)]), aux4) --- Element(flatten(M[int(..),3]), aux8)
{1..5}
DISCRETE aux94 #Element(flatten(M[2,int(..)]), aux12) --- Element(flatten(M[int(..),4]), aux8)
{1..5}
DISCRETE aux95 #Element(flatten(M[2,int(..)]), aux10) --- Element(flatten(M[int(..),0]), aux22)
{1..5}
DISCRETE aux96 #Element(flatten(M[2,int(..)]), aux2) --- Element(flatten(M[int(..),1]), aux22)
{1..5}
DISCRETE aux97 #Element(flatten(M[2,int(..)]), aux14) --- Element(flatten(M[int(..),2]), aux22)
{1..5}
DISCRETE aux98 #Element(flatten(M[2,int(..)]), aux19) --- Element(flatten(M[int(..),3]), aux22)
{1..5}
DISCRETE aux99 #Element(flatten(M[2,int(..)]), aux15) --- Element(flatten(M[int(..),4]), aux22)
{1..5}
DISCRETE aux100 #Element(flatten(M[3,int(..)]), aux7) --- Element(flatten(M[int(..),0]), aux24)
{1..5}
DISCRETE aux101 #Element(flatten(M[3,int(..)]), aux23) --- Element(flatten(M[int(..),1]), aux24)
{1..5}
DISCRETE aux102 #Element(flatten(M[3,int(..)]), aux1) --- Element(flatten(M[int(..),2]), aux24)
{1..5}
DISCRETE aux103 #Element(flatten(M[3,int(..)]), aux20) --- Element(flatten(M[int(..),3]), aux24)
{1..5}
DISCRETE aux104 #Element(flatten(M[3,int(..)]), aux0) --- Element(flatten(M[int(..),4]), aux24)
{1..5}
DISCRETE aux105 #Element(flatten(M[3,int(..)]), aux16) --- Element(flatten(M[int(..),0]), aux11)
{1..5}
DISCRETE aux106 #Element(flatten(M[3,int(..)]), aux9) --- Element(flatten(M[int(..),1]), aux11)
{1..5}
DISCRETE aux107 #Element(flatten(M[3,int(..)]), aux13) --- Element(flatten(M[int(..),2]), aux11)
{1..5}
DISCRETE aux108 #Element(flatten(M[3,int(..)]), aux6) --- Element(flatten(M[int(..),3]), aux11)
{1..5}
DISCRETE aux109 #Element(flatten(M[3,int(..)]), aux5) --- Element(flatten(M[int(..),4]), aux11)
{1..5}
DISCRETE aux110 #Element(flatten(M[3,int(..)]), aux3) --- Element(flatten(M[int(..),0]), aux21)
{1..5}
DISCRETE aux111 #Element(flatten(M[3,int(..)]), aux17) --- Element(flatten(M[int(..),1]), aux21)
{1..5}
DISCRETE aux112 #Element(flatten(M[3,int(..)]), aux18) --- Element(flatten(M[int(..),2]), aux21)
{1..5}
DISCRETE aux113 #Element(flatten(M[3,int(..)]), aux8) --- Element(flatten(M[int(..),3]), aux21)
{1..5}
DISCRETE aux114 #Element(flatten(M[3,int(..)]), aux22) --- Element(flatten(M[int(..),4]), aux21)
{1..5}
DISCRETE aux115 #Element(flatten(M[3,int(..)]), aux24) --- Element(flatten(M[int(..),0]), aux4)
{1..5}
DISCRETE aux116 #Element(flatten(M[3,int(..)]), aux11) --- Element(flatten(M[int(..),1]), aux4)
{1..5}
DISCRETE aux117 #Element(flatten(M[3,int(..)]), aux21) --- Element(flatten(M[int(..),2]), aux4)
{1..5}
DISCRETE aux118 #Element(flatten(M[3,int(..)]), aux4) --- Element(flatten(M[int(..),3]), aux4)
{1..5}
DISCRETE aux119 #Element(flatten(M[3,int(..)]), aux12) --- Element(flatten(M[int(..),4]), aux4)
{1..5}
DISCRETE aux120 #Element(flatten(M[3,int(..)]), aux10) --- Element(flatten(M[int(..),0]), aux12)
{1..5}
DISCRETE aux121 #Element(flatten(M[3,int(..)]), aux2) --- Element(flatten(M[int(..),1]), aux12)
{1..5}
DISCRETE aux122 #Element(flatten(M[3,int(..)]), aux14) --- Element(flatten(M[int(..),2]), aux12)
{1..5}
DISCRETE aux123 #Element(flatten(M[3,int(..)]), aux19) --- Element(flatten(M[int(..),3]), aux12)
{1..5}
DISCRETE aux124 #Element(flatten(M[3,int(..)]), aux15) --- Element(flatten(M[int(..),4]), aux12)
{1..5}
DISCRETE aux125 #Element(flatten(M[4,int(..)]), aux7) --- Element(flatten(M[int(..),0]), aux10)
{1..5}
DISCRETE aux126 #Element(flatten(M[4,int(..)]), aux23) --- Element(flatten(M[int(..),1]), aux10)
{1..5}
DISCRETE aux127 #Element(flatten(M[4,int(..)]), aux1) --- Element(flatten(M[int(..),2]), aux10)
{1..5}
DISCRETE aux128 #Element(flatten(M[4,int(..)]), aux20) --- Element(flatten(M[int(..),3]), aux10)
{1..5}
DISCRETE aux129 #Element(flatten(M[4,int(..)]), aux0) --- Element(flatten(M[int(..),4]), aux10)
{1..5}
DISCRETE aux130 #Element(flatten(M[4,int(..)]), aux16) --- Element(flatten(M[int(..),0]), aux2)
{1..5}
DISCRETE aux131 #Element(flatten(M[4,int(..)]), aux9) --- Element(flatten(M[int(..),1]), aux2)
{1..5}
DISCRETE aux132 #Element(flatten(M[4,int(..)]), aux13) --- Element(flatten(M[int(..),2]), aux2)
{1..5}
DISCRETE aux133 #Element(flatten(M[4,int(..)]), aux6) --- Element(flatten(M[int(..),3]), aux2)
{1..5}
DISCRETE aux134 #Element(flatten(M[4,int(..)]), aux5) --- Element(flatten(M[int(..),4]), aux2)
{1..5}
DISCRETE aux135 #Element(flatten(M[4,int(..)]), aux3) --- Element(flatten(M[int(..),0]), aux14)
{1..5}
DISCRETE aux136 #Element(flatten(M[4,int(..)]), aux17) --- Element(flatten(M[int(..),1]), aux14)
{1..5}
DISCRETE aux137 #Element(flatten(M[4,int(..)]), aux18) --- Element(flatten(M[int(..),2]), aux14)
{1..5}
DISCRETE aux138 #Element(flatten(M[4,int(..)]), aux8) --- Element(flatten(M[int(..),3]), aux14)
{1..5}
DISCRETE aux139 #Element(flatten(M[4,int(..)]), aux22) --- Element(flatten(M[int(..),4]), aux14)
{1..5}
DISCRETE aux140 #Element(flatten(M[4,int(..)]), aux24) --- Element(flatten(M[int(..),0]), aux19)
{1..5}
DISCRETE aux141 #Element(flatten(M[4,int(..)]), aux11) --- Element(flatten(M[int(..),1]), aux19)
{1..5}
DISCRETE aux142 #Element(flatten(M[4,int(..)]), aux21) --- Element(flatten(M[int(..),2]), aux19)
{1..5}
DISCRETE aux143 #Element(flatten(M[4,int(..)]), aux4) --- Element(flatten(M[int(..),3]), aux19)
{1..5}
DISCRETE aux144 #Element(flatten(M[4,int(..)]), aux12) --- Element(flatten(M[int(..),4]), aux19)
{1..5}
DISCRETE aux145 #Element(flatten(M[4,int(..)]), aux10) --- Element(flatten(M[int(..),0]), aux15)
{1..5}
DISCRETE aux146 #Element(flatten(M[4,int(..)]), aux2) --- Element(flatten(M[int(..),1]), aux15)
{1..5}
DISCRETE aux147 #Element(flatten(M[4,int(..)]), aux14) --- Element(flatten(M[int(..),2]), aux15)
{1..5}
DISCRETE aux148 #Element(flatten(M[4,int(..)]), aux19) --- Element(flatten(M[int(..),3]), aux15)
{1..5}
DISCRETE aux149 #Element(flatten(M[4,int(..)]), aux15) --- Element(flatten(M[int(..),4]), aux15)
{1..5}
**SEARCH**
PRINT[[M_00000_00000],[M_00000_00001],[M_00000_00002],[M_00000_00003],[M_00000_00004],[M_00001_00000],[M_00001_00001],[M_00001_00002],[M_00001_00003],[M_00001_00004],[M_00002_00000],[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00003_00000],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00004_00000],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004]]
VARORDER STATIC [M_00000_00000,M_00000_00001,M_00000_00002,M_00000_00003,M_00000_00004,M_00001_00000,M_00001_00001,M_00001_00002,M_00001_00003,M_00001_00004,M_00002_00000,M_00002_00001,M_00002_00002,M_00002_00003,M_00002_00004,M_00003_00000,M_00003_00001,M_00003_00002,M_00003_00003,M_00003_00004,M_00004_00000,M_00004_00001,M_00004_00002,M_00004_00003,M_00004_00004]
VARORDER AUX [aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,aux56,aux57,aux58,aux59,aux60,aux61,aux62,aux63,aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,aux88,aux89,aux90,aux91,aux92,aux93,aux94,aux95,aux96,aux97,aux98,aux99,aux100,aux101,aux102,aux103,aux104,aux105,aux106,aux107,aux108,aux109,aux110,aux111,aux112,aux113,aux114,aux115,aux116,aux117,aux118,aux119,aux120,aux121,aux122,aux123,aux124,aux125,aux126,aux127,aux128,aux129,aux130,aux131,aux132,aux133,aux134,aux135,aux136,aux137,aux138,aux139,aux140,aux141,aux142,aux143,aux144,aux145,aux146,aux147,aux148,aux149]
**CONSTRAINTS**
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux7, aux25)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux7, aux25)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux23, aux26)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux7, aux26)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux1, aux27)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux7, aux27)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux20, aux28)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux7, aux28)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux0, aux29)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux7, aux29)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux16, aux30)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux23, aux30)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux9, aux31)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux23, aux31)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux13, aux32)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux23, aux32)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux6, aux33)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux23, aux33)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux5, aux34)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux23, aux34)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux3, aux35)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux1, aux35)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux17, aux36)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux1, aux36)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux18, aux37)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux1, aux37)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux8, aux38)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux1, aux38)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux22, aux39)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux1, aux39)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux24, aux40)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux20, aux40)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux11, aux41)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux20, aux41)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux21, aux42)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux20, aux42)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux4, aux43)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux20, aux43)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux12, aux44)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux20, aux44)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux10, aux45)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux0, aux45)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux2, aux46)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux0, aux46)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux14, aux47)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux0, aux47)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux19, aux48)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux0, aux48)
watchelement([M_00000_00000, M_00000_00001, M_00000_00002, M_00000_00003, M_00000_00004], aux15, aux49)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux0, aux49)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux7, aux50)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux16, aux50)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux23, aux51)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux16, aux51)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux1, aux52)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux16, aux52)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux20, aux53)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux16, aux53)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux0, aux54)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux16, aux54)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux16, aux55)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux9, aux55)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux9, aux56)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux9, aux56)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux13, aux57)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux9, aux57)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux6, aux58)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux9, aux58)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux5, aux59)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux9, aux59)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux3, aux60)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux13, aux60)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux17, aux61)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux13, aux61)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux18, aux62)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux13, aux62)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux8, aux63)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux13, aux63)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux22, aux64)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux13, aux64)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux24, aux65)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux6, aux65)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux11, aux66)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux6, aux66)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux21, aux67)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux6, aux67)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux4, aux68)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux6, aux68)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux12, aux69)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux6, aux69)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux10, aux70)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux5, aux70)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux2, aux71)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux5, aux71)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux14, aux72)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux5, aux72)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux19, aux73)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux5, aux73)
watchelement([M_00001_00000, M_00001_00001, M_00001_00002, M_00001_00003, M_00001_00004], aux15, aux74)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux5, aux74)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux7, aux75)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux3, aux75)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux23, aux76)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux3, aux76)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux1, aux77)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux3, aux77)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux20, aux78)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux3, aux78)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux0, aux79)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux3, aux79)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux16, aux80)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux17, aux80)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux9, aux81)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux17, aux81)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux13, aux82)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux17, aux82)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux6, aux83)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux17, aux83)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux5, aux84)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux17, aux84)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux3, aux85)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux18, aux85)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux17, aux86)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux18, aux86)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux18, aux87)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux18, aux87)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux8, aux88)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux18, aux88)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux22, aux89)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux18, aux89)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux24, aux90)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux8, aux90)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux11, aux91)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux8, aux91)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux21, aux92)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux8, aux92)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux4, aux93)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux8, aux93)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux12, aux94)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux8, aux94)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux10, aux95)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux22, aux95)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux2, aux96)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux22, aux96)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux14, aux97)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux22, aux97)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux19, aux98)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux22, aux98)
watchelement([M_00002_00000, M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004], aux15, aux99)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux22, aux99)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux7, aux100)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux24, aux100)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux23, aux101)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux24, aux101)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux1, aux102)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux24, aux102)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux20, aux103)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux24, aux103)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux0, aux104)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux24, aux104)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux16, aux105)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux11, aux105)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux9, aux106)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux11, aux106)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux13, aux107)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux11, aux107)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux6, aux108)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux11, aux108)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux5, aux109)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux11, aux109)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux3, aux110)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux21, aux110)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux17, aux111)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux21, aux111)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux18, aux112)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux21, aux112)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux8, aux113)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux21, aux113)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux22, aux114)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux21, aux114)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux24, aux115)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux4, aux115)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux11, aux116)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux4, aux116)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux21, aux117)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux4, aux117)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux4, aux118)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux4, aux118)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux12, aux119)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux4, aux119)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux10, aux120)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux12, aux120)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux2, aux121)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux12, aux121)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux14, aux122)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux12, aux122)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux19, aux123)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux12, aux123)
watchelement([M_00003_00000, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004], aux15, aux124)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux12, aux124)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux7, aux125)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux10, aux125)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux23, aux126)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux10, aux126)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux1, aux127)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux10, aux127)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux20, aux128)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux10, aux128)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux0, aux129)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux10, aux129)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux16, aux130)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux2, aux130)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux9, aux131)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux2, aux131)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux13, aux132)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux2, aux132)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux6, aux133)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux2, aux133)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux5, aux134)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux2, aux134)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux3, aux135)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux14, aux135)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux17, aux136)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux14, aux136)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux18, aux137)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux14, aux137)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux8, aux138)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux14, aux138)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux22, aux139)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux14, aux139)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux24, aux140)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux19, aux140)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux11, aux141)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux19, aux141)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux21, aux142)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux19, aux142)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux4, aux143)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux19, aux143)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux12, aux144)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux19, aux144)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux10, aux145)
watchelement([M_00000_00000, M_00001_00000, M_00002_00000, M_00003_00000, M_00004_00000], aux15, aux145)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux2, aux146)
watchelement([M_00000_00001, M_00001_00001, M_00002_00001, M_00003_00001, M_00004_00001], aux15, aux146)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux14, aux147)
watchelement([M_00000_00002, M_00001_00002, M_00002_00002, M_00003_00002, M_00004_00002], aux15, aux147)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux19, aux148)
watchelement([M_00000_00003, M_00001_00003, M_00002_00003, M_00003_00003, M_00004_00003], aux15, aux148)
watchelement([M_00004_00000, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004], aux15, aux149)
watchelement([M_00000_00004, M_00001_00004, M_00002_00004, M_00003_00004, M_00004_00004], aux15, aux149)
sumleq([-1,M_00000_00004],aux0)
sumgeq([-1,M_00000_00004],aux0)
sumleq([-1,M_00000_00002],aux1)
sumgeq([-1,M_00000_00002],aux1)
sumleq([M_00004_00001,-1],aux2)
sumgeq([M_00004_00001,-1],aux2)
sumleq([M_00002_00000,-1],aux3)
sumgeq([M_00002_00000,-1],aux3)
sumleq([M_00003_00003,-1],aux4)
sumgeq([M_00003_00003,-1],aux4)
sumleq([-1,M_00001_00004],aux5)
sumgeq([-1,M_00001_00004],aux5)
sumleq([-1,M_00001_00003],aux6)
sumgeq([-1,M_00001_00003],aux6)
sumleq([-1,M_00000_00000],aux7)
sumgeq([-1,M_00000_00000],aux7)
sumleq([M_00002_00003,-1],aux8)
sumgeq([M_00002_00003,-1],aux8)
sumleq([-1,M_00001_00001],aux9)
sumgeq([-1,M_00001_00001],aux9)
sumleq([M_00004_00000,-1],aux10)
sumgeq([M_00004_00000,-1],aux10)
sumleq([M_00003_00001,-1],aux11)
sumgeq([M_00003_00001,-1],aux11)
sumleq([M_00003_00004,-1],aux12)
sumgeq([M_00003_00004,-1],aux12)
sumleq([-1,M_00001_00002],aux13)
sumgeq([-1,M_00001_00002],aux13)
sumleq([M_00004_00002,-1],aux14)
sumgeq([M_00004_00002,-1],aux14)
sumleq([M_00004_00004,-1],aux15)
sumgeq([M_00004_00004,-1],aux15)
sumleq([-1,M_00001_00000],aux16)
sumgeq([-1,M_00001_00000],aux16)
sumleq([M_00002_00001,-1],aux17)
sumgeq([M_00002_00001,-1],aux17)
sumleq([M_00002_00002,-1],aux18)
sumgeq([M_00002_00002,-1],aux18)
sumleq([M_00004_00003,-1],aux19)
sumgeq([M_00004_00003,-1],aux19)
sumleq([-1,M_00000_00003],aux20)
sumgeq([-1,M_00000_00003],aux20)
sumleq([M_00003_00002,-1],aux21)
sumgeq([M_00003_00002,-1],aux21)
sumleq([M_00002_00004,-1],aux22)
sumgeq([M_00002_00004,-1],aux22)
sumleq([-1,M_00000_00001],aux23)
sumgeq([-1,M_00000_00001],aux23)
sumleq([M_00003_00000,-1],aux24)
sumgeq([M_00003_00000,-1],aux24)
**EOF**
