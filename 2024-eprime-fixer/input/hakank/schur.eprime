$
$ Schur problem in Essence'.
$
$ From the Esra model:
$ http://www.cs.york.ac.uk/aig/constraints/AutoModel/Essence/f_esra/f_schur.html
$ """
$ An F model of Schur's Lemma (CSPlib prob015)
$
$       balls: {int};
$       boxes: {int};
$       var Schur:balls -> boxes;
$       solve {
$       forall(i,j,k in balls: i+j=k)
$               not(Schur(i) = Schur(j) = Schur(k))};
$
$  this model appears in: Brahim Hnich, "Function Variables for Constraint Programming"
$ """


$
$ Model created by Hakan Kjellerstrand, hakank@gmail.com
$ See also my Essence'/Tailor page: http://www.hakank.org/savile_row/
$
language ESSENCE' 1.0

$ given n : int(1..100)
letting n be 10

$ letting balls be domain int(1..n)
letting num_boxes be 5

find schur : matrix indexed by [int(1..n)] of int(1..num_boxes)

such that
 forall i,j,k : int(1..n) . 
    (i+j=k) => 
        !( (schur[i] = schur[j]) /\ (schur[j] = schur[k]))
    

