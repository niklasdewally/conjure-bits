language ESSENCE' 1.0

$ ----- PARAMETERS -------------------------
given vertices : int(1..)
given colours : int(1..)

letting VERTICES be domain int(1..vertices)
letting COLOURS be domain int(1..colours)

given edges : matrix indexed by [VERTICES,VERTICES] of bool


$ ----- VARIABLES --------------------------
find colouring : matrix indexed by [VERTICES] of COLOURS
find usedColours : matrix indexed by [COLOURS] of bool

$ ----- OBJECTIVE --------------------------
minimising sum c : COLOURS . usedColours[c]

$ ----- CONSTRAINTS ------------------------
such that 
   
   forall a,b : VERTICES . 
        edges[a,b] => 
              colouring[a] != colouring[b],

   forall a : VERTICES .
      forall c : COLOURS . 
         (colouring[a] = c)  => (usedColours[c])


