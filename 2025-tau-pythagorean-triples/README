Fri 04/April/2025

An experiment to do with where we put the guard in a comprehension, for my dissertation.



Essence Prime models and benchmarks for the Pythagorean Triples theorem, as discussed by
Terence Tau in his article on [Machine-Assisted Proof](https://www.ams.org/journals/notices/202501/rnoti-p6.pdf).

>  (Boolean Pythagorean triples theorem [HKM16]). 
>
> The set {1, … , 7824} can be partitioned into two classes, neither of which
> contains a Pythagorean triple (𝑎, 𝑏, 𝑐) with 𝑎 2 + 𝑏2 = 𝑐2 ; however, this is
> not possible for {1, … , 7825}.

Unrolling the comprehensions used for this model (at time of writing) is slow
in Savile Row. I am using this as a benchmark for comprehension unrolling in
Conjure Oxide. 

As we only care about values of a,b,c such that `a**2 + b**2 = c**2` there is
lots of potential for reducing the number of expressions returned in the
comprehension via pruning. I hypothesise that Conjure Oxide will be better at
this, as it calls Minion to unwrap the comprehensions (using constraint
propogation), while Savile Row only uses Forward Checking.


## Contents 

```
Makefile            - substitute parameters into the models, generates models_with_params/
models/             - input models
models_with_params/ - models
results/            - the result used
scripts/            - scripts for plotting, cleanup
bench.sh            - runs the benchmarks
```
