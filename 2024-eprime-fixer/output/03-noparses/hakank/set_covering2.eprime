language ESSENCE' 1.0
letting n be 8
letting num_streets be 11
letting corner :matrix indexed by [int(1..num_streets),int(1..2)] of int(1..n) be [[1, 2], 
[2, 3], 
[4, 5], 
[7, 8], 
[6, 7], 
[2, 6], 
[1, 6], 
[4, 7], 
[2, 4], 
[5, 8], 
[3, 5]]
find x : matrix indexed by [int(1..n)] of int(0..1)
find z : int(0..1000)
minimising z
such that
(forAll i : int(1..num_streets) . (1<=((sum j : int(1..n) . (x[corner[i, 1]] + x[corner[i, 2]]))))),
(z=(sum j : int(1..n) . x[j]))
