language ESSENCE' 1.0

$ Partition the set {1..N} into two classes

given n: int(1..)

find class : matrix indexed by [int(1..n)] of int(1..2)
 
such that

forAll a,b,c: int(1..n).
  (a ** 2 + b**2 = c**2) -> (class[a] != class[b] \/ class[b] != class[c] \/ class[c] != class[a])


$ this should be rewritten to the same as guard_inside_comprehension.eprime:
$ 
$ and([or([class[a] != class[b]
$       ,class[b] != class[c],
$       class[c] != class[a]]) 
$     | a: int(1..n), 
$       b:int(1..n), 
$       c:int(1..n), 
$       a** 2 + b **2 = c**2])
