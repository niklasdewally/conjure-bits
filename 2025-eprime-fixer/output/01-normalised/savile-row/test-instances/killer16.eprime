language ESSENCE' 1.0
letting SIZE be 16
given lastdx : int(1..(((((2 * SIZE) * ((SIZE - 1))) - 1))))
letting NUMQD be domain int(0..lastdx)
letting RANGE be domain int(1..SIZE)
given cage : matrix indexed by [NUMQD,int(0..10)] of int(0..100)
find field : matrix indexed by [RANGE,RANGE] of RANGE
such that
(forAll row : RANGE . allDiff(field[row,..])),
(forAll col : RANGE . allDiff(field[..,col])),
(forAll i : int(0..3) . (forAll j : int(0..3) . allDiff([field[row, col]|row : int(((i * 4) + 1)..(((i * 4)) + 4)), col : int(((j * 4) + 1)..(((j * 4)) + 4)), () ;int(1..)]))),
(forAll i : NUMQD . (((((((((cage[i, 9]!=0)) /\ ((cage[i, 0]=((((field[cage[i, 1], cage[i, 2]] + field[cage[i, 3], cage[i, 4]]) + field[cage[i, 5], cage[i, 6]]) + field[cage[i, 7], cage[i, 8]]) + field[cage[i, 9], cage[i, 10]])))) /\ allDiff([field[cage[i, 1], cage[i, 2]], field[cage[i, 3], cage[i, 4]], field[cage[i, 5], cage[i, 6]], field[cage[i, 7], cage[i, 8]], field[cage[i, 9], cage[i, 10]]]))) \/ ((((((cage[i, 9]=0)) /\ ((cage[i, 7]!=0))) /\ ((cage[i, 0]=(((field[cage[i, 1], cage[i, 2]] + field[cage[i, 3], cage[i, 4]]) + field[cage[i, 5], cage[i, 6]]) + field[cage[i, 7], cage[i, 8]])))) /\ allDiff([field[cage[i, 1], cage[i, 2]], field[cage[i, 3], cage[i, 4]], field[cage[i, 5], cage[i, 6]], field[cage[i, 7], cage[i, 8]]])))) \/ ((((((cage[i, 7]=0)) /\ ((cage[i, 5]!=0))) /\ ((cage[i, 0]=((field[cage[i, 1], cage[i, 2]] + field[cage[i, 3], cage[i, 4]]) + field[cage[i, 5], cage[i, 6]])))) /\ allDiff([field[cage[i, 1], cage[i, 2]], field[cage[i, 3], cage[i, 4]], field[cage[i, 5], cage[i, 6]]])))) \/ ((((((cage[i, 5]=0)) /\ ((cage[i, 3]!=0))) /\ ((cage[i, 0]=(field[cage[i, 1], cage[i, 2]] + field[cage[i, 3], cage[i, 4]])))) /\ (field[cage[i, 1], cage[i, 2]] != field[cage[i, 3], cage[i, 4]])))) \/ ((((cage[i, 3]=0)) /\ ((cage[i, 0]=field[cage[i, 1], cage[i, 2]]))))))
