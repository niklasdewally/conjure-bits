MINION 3
**VARIABLES**
DISCRETE tour_00000 #
{0..24}
DISCRETE tour_00001 #
{0..24}
DISCRETE tour_00002 #
{0..24}
DISCRETE tour_00003 #
{0..24}
DISCRETE tour_00004 #
{0..24}
DISCRETE tour_00005 #
{0..24}
DISCRETE tour_00006 #
{0..24}
DISCRETE tour_00007 #
{0..24}
DISCRETE tour_00008 #
{0..24}
DISCRETE tour_00009 #
{0..24}
DISCRETE tour_00010 #
{0..24}
DISCRETE tour_00011 #
{0..24}
DISCRETE tour_00012 #
{0..24}
DISCRETE tour_00013 #
{0..24}
DISCRETE tour_00014 #
{0..24}
DISCRETE tour_00015 #
{0..24}
DISCRETE tour_00016 #
{0..24}
DISCRETE tour_00017 #
{0..24}
DISCRETE tour_00018 #
{0..24}
DISCRETE tour_00019 #
{0..24}
DISCRETE tour_00020 #
{0..24}
DISCRETE tour_00021 #
{0..24}
DISCRETE tour_00022 #
{0..24}
DISCRETE tour_00023 #
{0..24}
DISCRETE aux0 #CSE: 2 occurrences of: |((tour[18]/5)-1*(tour[19]/5))|
{0..4}
DISCRETE aux1 #CSE: 2 occurrences of: |((tour[17]%5)-1*(tour[18]%5))|
{0..4}
DISCRETE aux2 #CSE: 2 occurrences of: |((tour[14]/5)-1*(tour[15]/5))|
{0..4}
DISCRETE aux3 #CSE: 2 occurrences of: |((tour[11]/5)-1*(tour[12]/5))|
{0..4}
DISCRETE aux4 #CSE: 2 occurrences of: |((tour[12]/5)-1*(tour[13]/5))|
{0..4}
DISCRETE aux5 #CSE: 2 occurrences of: |((tour[21]/5)-1*(tour[22]/5))|
{0..4}
DISCRETE aux6 #CSE: 2 occurrences of: |((tour[18]%5)-1*(tour[19]%5))|
{0..4}
DISCRETE aux7 #CSE: 2 occurrences of: |((tour[11]%5)-1*(tour[12]%5))|
{0..4}
DISCRETE aux8 #CSE: 2 occurrences of: |((tour[15]/5)-1*(tour[16]/5))|
{0..4}
DISCRETE aux9 #CSE: 2 occurrences of: |((tour[16]%5)-1*(tour[17]%5))|
{0..4}
DISCRETE aux10 #CSE: 2 occurrences of: |((tour[16]/5)-1*(tour[17]/5))|
{0..4}
DISCRETE aux11 #CSE: 2 occurrences of: |((tour[14]%5)-1*(tour[15]%5))|
{0..4}
DISCRETE aux12 #CSE: 2 occurrences of: |((tour[22]/5)-1*(tour[23]/5))|
{0..4}
DISCRETE aux13 #CSE: 2 occurrences of: |((tour[19]%5)-1*(tour[20]%5))|
{0..4}
DISCRETE aux14 #CSE: 2 occurrences of: |((tour[13]%5)-1*(tour[14]%5))|
{0..4}
DISCRETE aux15 #CSE: 2 occurrences of: |((tour[10]/5)-1*(tour[11]/5))|
{0..4}
DISCRETE aux16 #CSE: 2 occurrences of: |((tour[10]%5)-1*(tour[11]%5))|
{0..4}
DISCRETE aux17 #CSE: 2 occurrences of: |((tour[21]%5)-1*(tour[22]%5))|
{0..4}
DISCRETE aux18 #CSE: 2 occurrences of: |((tour[13]/5)-1*(tour[14]/5))|
{0..4}
DISCRETE aux19 #CSE: 2 occurrences of: |((tour[20]/5)-1*(tour[21]/5))|
{0..4}
DISCRETE aux20 #CSE: 2 occurrences of: |((tour[20]%5)-1*(tour[21]%5))|
{0..4}
DISCRETE aux21 #CSE: 2 occurrences of: |((tour[22]%5)-1*(tour[23]%5))|
{0..4}
DISCRETE aux22 #CSE: 2 occurrences of: |((tour[12]%5)-1*(tour[13]%5))|
{0..4}
DISCRETE aux23 #CSE: 2 occurrences of: |((tour[15]%5)-1*(tour[16]%5))|
{0..4}
DISCRETE aux24 #CSE: 2 occurrences of: |((tour[19]/5)-1*(tour[20]/5))|
{0..4}
DISCRETE aux25 #CSE: 2 occurrences of: |((tour[17]/5)-1*(tour[18]/5))|
{0..4}
DISCRETE aux26 #CSE: 2 occurrences of: |((tour[9]%5)-1*(tour[10]%5))|
{0..4}
DISCRETE aux27 #CSE: 2 occurrences of: |((tour[9]/5)-1*(tour[10]/5))|
{0..4}
DISCRETE aux28 #CSE: 2 occurrences of: |((tour[2]/5)-1*(tour[3]/5))|
{0..4}
DISCRETE aux29 #CSE: 2 occurrences of: |((tour[3]/5)-1*(tour[4]/5))|
{0..4}
DISCRETE aux30 #CSE: 2 occurrences of: |((tour[7]/5)-1*(tour[8]/5))|
{0..4}
DISCRETE aux31 #CSE: 2 occurrences of: |((tour[5]%5)-1*(tour[6]%5))|
{0..4}
DISCRETE aux32 #CSE: 2 occurrences of: |((tour[3]%5)-1*(tour[4]%5))|
{0..4}
DISCRETE aux33 #CSE: 2 occurrences of: |((tour[5]/5)-1*(tour[6]/5))|
{0..4}
DISCRETE aux34 #CSE: 2 occurrences of: |((tour[7]%5)-1*(tour[8]%5))|
{0..4}
DISCRETE aux35 #CSE: 2 occurrences of: |((tour[0]/5)-1*(tour[1]/5))|
{0..4}
DISCRETE aux36 #CSE: 2 occurrences of: |((tour[6]%5)-1*(tour[7]%5))|
{0..4}
DISCRETE aux37 #CSE: 2 occurrences of: |((tour[1]/5)-1*(tour[2]/5))|
{0..4}
DISCRETE aux38 #CSE: 2 occurrences of: |((tour[1]%5)-1*(tour[2]%5))|
{0..4}
DISCRETE aux39 #CSE: 2 occurrences of: |((tour[2]%5)-1*(tour[3]%5))|
{0..4}
DISCRETE aux40 #CSE: 2 occurrences of: |((tour[8]/5)-1*(tour[9]/5))|
{0..4}
DISCRETE aux41 #CSE: 2 occurrences of: |((tour[4]/5)-1*(tour[5]/5))|
{0..4}
DISCRETE aux42 #CSE: 2 occurrences of: |((tour[8]%5)-1*(tour[9]%5))|
{0..4}
DISCRETE aux43 #CSE: 2 occurrences of: |((tour[4]%5)-1*(tour[5]%5))|
{0..4}
DISCRETE aux44 #CSE: 2 occurrences of: |((tour[0]%5)-1*(tour[1]%5))|
{0..4}
DISCRETE aux45 #CSE: 2 occurrences of: |((tour[6]/5)-1*(tour[7]/5))|
{0..4}
DISCRETE aux46 #(tour[18]/5)
{0..4}
DISCRETE aux47 #(tour[19]/5)
{0..4}
DISCRETE aux48 #(aux46-1*aux47)
{-4..4}
DISCRETE aux49 #(tour[17]%5)
{0..4}
DISCRETE aux50 #(tour[18]%5)
{0..4}
DISCRETE aux51 #(aux49-1*aux50)
{-4..4}
DISCRETE aux52 #(tour[14]/5)
{0..4}
DISCRETE aux53 #(tour[15]/5)
{0..4}
DISCRETE aux54 #(aux52-1*aux53)
{-4..4}
DISCRETE aux55 #(tour[11]/5)
{0..4}
DISCRETE aux56 #(tour[12]/5)
{0..4}
DISCRETE aux57 #(aux55-1*aux56)
{-4..4}
DISCRETE aux58 #(tour[12]/5)
{0..4}
DISCRETE aux59 #(tour[13]/5)
{0..4}
DISCRETE aux60 #(aux58-1*aux59)
{-4..4}
DISCRETE aux61 #(tour[21]/5)
{0..4}
DISCRETE aux62 #(tour[22]/5)
{0..4}
DISCRETE aux63 #(aux61-1*aux62)
{-4..4}
DISCRETE aux64 #(tour[18]%5)
{0..4}
DISCRETE aux65 #(tour[19]%5)
{0..4}
DISCRETE aux66 #(aux64-1*aux65)
{-4..4}
DISCRETE aux67 #(tour[11]%5)
{0..4}
DISCRETE aux68 #(tour[12]%5)
{0..4}
DISCRETE aux69 #(aux67-1*aux68)
{-4..4}
DISCRETE aux70 #(tour[15]/5)
{0..4}
DISCRETE aux71 #(tour[16]/5)
{0..4}
DISCRETE aux72 #(aux70-1*aux71)
{-4..4}
DISCRETE aux73 #(tour[16]%5)
{0..4}
DISCRETE aux74 #(tour[17]%5)
{0..4}
DISCRETE aux75 #(aux73-1*aux74)
{-4..4}
DISCRETE aux76 #(tour[16]/5)
{0..4}
DISCRETE aux77 #(tour[17]/5)
{0..4}
DISCRETE aux78 #(aux76-1*aux77)
{-4..4}
DISCRETE aux79 #(tour[14]%5)
{0..4}
DISCRETE aux80 #(tour[15]%5)
{0..4}
DISCRETE aux81 #(aux79-1*aux80)
{-4..4}
DISCRETE aux82 #(tour[22]/5)
{0..4}
DISCRETE aux83 #(tour[23]/5)
{0..4}
DISCRETE aux84 #(aux82-1*aux83)
{-4..4}
DISCRETE aux85 #(tour[19]%5)
{0..4}
DISCRETE aux86 #(tour[20]%5)
{0..4}
DISCRETE aux87 #(aux85-1*aux86)
{-4..4}
DISCRETE aux88 #(tour[13]%5)
{0..4}
DISCRETE aux89 #(tour[14]%5)
{0..4}
DISCRETE aux90 #(aux88-1*aux89)
{-4..4}
DISCRETE aux91 #(tour[10]/5)
{0..4}
DISCRETE aux92 #(tour[11]/5)
{0..4}
DISCRETE aux93 #(aux91-1*aux92)
{-4..4}
DISCRETE aux94 #(tour[10]%5)
{0..4}
DISCRETE aux95 #(tour[11]%5)
{0..4}
DISCRETE aux96 #(aux94-1*aux95)
{-4..4}
DISCRETE aux97 #(tour[21]%5)
{0..4}
DISCRETE aux98 #(tour[22]%5)
{0..4}
DISCRETE aux99 #(aux97-1*aux98)
{-4..4}
DISCRETE aux100 #(tour[13]/5)
{0..4}
DISCRETE aux101 #(tour[14]/5)
{0..4}
DISCRETE aux102 #(aux100-1*aux101)
{-4..4}
DISCRETE aux103 #(tour[20]/5)
{0..4}
DISCRETE aux104 #(tour[21]/5)
{0..4}
DISCRETE aux105 #(aux103-1*aux104)
{-4..4}
DISCRETE aux106 #(tour[20]%5)
{0..4}
DISCRETE aux107 #(tour[21]%5)
{0..4}
DISCRETE aux108 #(aux106-1*aux107)
{-4..4}
DISCRETE aux109 #(tour[22]%5)
{0..4}
DISCRETE aux110 #(tour[23]%5)
{0..4}
DISCRETE aux111 #(aux109-1*aux110)
{-4..4}
DISCRETE aux112 #(tour[12]%5)
{0..4}
DISCRETE aux113 #(tour[13]%5)
{0..4}
DISCRETE aux114 #(aux112-1*aux113)
{-4..4}
DISCRETE aux115 #(tour[15]%5)
{0..4}
DISCRETE aux116 #(tour[16]%5)
{0..4}
DISCRETE aux117 #(aux115-1*aux116)
{-4..4}
DISCRETE aux118 #(tour[19]/5)
{0..4}
DISCRETE aux119 #(tour[20]/5)
{0..4}
DISCRETE aux120 #(aux118-1*aux119)
{-4..4}
DISCRETE aux121 #(tour[17]/5)
{0..4}
DISCRETE aux122 #(tour[18]/5)
{0..4}
DISCRETE aux123 #(aux121-1*aux122)
{-4..4}
DISCRETE aux124 #(tour[9]%5)
{0..4}
DISCRETE aux125 #(tour[10]%5)
{0..4}
DISCRETE aux126 #(aux124-1*aux125)
{-4..4}
DISCRETE aux127 #(tour[9]/5)
{0..4}
DISCRETE aux128 #(tour[10]/5)
{0..4}
DISCRETE aux129 #(aux127-1*aux128)
{-4..4}
DISCRETE aux130 #(tour[2]/5)
{0..4}
DISCRETE aux131 #(tour[3]/5)
{0..4}
DISCRETE aux132 #(aux130-1*aux131)
{-4..4}
DISCRETE aux133 #(tour[3]/5)
{0..4}
DISCRETE aux134 #(tour[4]/5)
{0..4}
DISCRETE aux135 #(aux133-1*aux134)
{-4..4}
DISCRETE aux136 #(tour[7]/5)
{0..4}
DISCRETE aux137 #(tour[8]/5)
{0..4}
DISCRETE aux138 #(aux136-1*aux137)
{-4..4}
DISCRETE aux139 #(tour[5]%5)
{0..4}
DISCRETE aux140 #(tour[6]%5)
{0..4}
DISCRETE aux141 #(aux139-1*aux140)
{-4..4}
DISCRETE aux142 #(tour[3]%5)
{0..4}
DISCRETE aux143 #(tour[4]%5)
{0..4}
DISCRETE aux144 #(aux142-1*aux143)
{-4..4}
DISCRETE aux145 #(tour[5]/5)
{0..4}
DISCRETE aux146 #(tour[6]/5)
{0..4}
DISCRETE aux147 #(aux145-1*aux146)
{-4..4}
DISCRETE aux148 #(tour[7]%5)
{0..4}
DISCRETE aux149 #(tour[8]%5)
{0..4}
DISCRETE aux150 #(aux148-1*aux149)
{-4..4}
DISCRETE aux151 #(tour[0]/5)
{0..4}
DISCRETE aux152 #(tour[1]/5)
{0..4}
DISCRETE aux153 #(aux151-1*aux152)
{-4..4}
DISCRETE aux154 #(tour[6]%5)
{0..4}
DISCRETE aux155 #(tour[7]%5)
{0..4}
DISCRETE aux156 #(aux154-1*aux155)
{-4..4}
DISCRETE aux157 #(tour[1]/5)
{0..4}
DISCRETE aux158 #(tour[2]/5)
{0..4}
DISCRETE aux159 #(aux157-1*aux158)
{-4..4}
DISCRETE aux160 #(tour[1]%5)
{0..4}
DISCRETE aux161 #(tour[2]%5)
{0..4}
DISCRETE aux162 #(aux160-1*aux161)
{-4..4}
DISCRETE aux163 #(tour[2]%5)
{0..4}
DISCRETE aux164 #(tour[3]%5)
{0..4}
DISCRETE aux165 #(aux163-1*aux164)
{-4..4}
DISCRETE aux166 #(tour[8]/5)
{0..4}
DISCRETE aux167 #(tour[9]/5)
{0..4}
DISCRETE aux168 #(aux166-1*aux167)
{-4..4}
DISCRETE aux169 #(tour[4]/5)
{0..4}
DISCRETE aux170 #(tour[5]/5)
{0..4}
DISCRETE aux171 #(aux169-1*aux170)
{-4..4}
DISCRETE aux172 #(tour[8]%5)
{0..4}
DISCRETE aux173 #(tour[9]%5)
{0..4}
DISCRETE aux174 #(aux172-1*aux173)
{-4..4}
DISCRETE aux175 #(tour[4]%5)
{0..4}
DISCRETE aux176 #(tour[5]%5)
{0..4}
DISCRETE aux177 #(aux175-1*aux176)
{-4..4}
DISCRETE aux178 #(tour[0]%5)
{0..4}
DISCRETE aux179 #(tour[1]%5)
{0..4}
DISCRETE aux180 #(aux178-1*aux179)
{-4..4}
DISCRETE aux181 #(tour[6]/5)
{0..4}
DISCRETE aux182 #(tour[7]/5)
{0..4}
DISCRETE aux183 #(aux181-1*aux182)
{-4..4}
**SEARCH**
PRINT[[tour_00000],[tour_00001],[tour_00002],[tour_00003],[tour_00004],[tour_00005],[tour_00006],[tour_00007],[tour_00008],[tour_00009],[tour_00010],[tour_00011],[tour_00012],[tour_00013],[tour_00014],[tour_00015],[tour_00016],[tour_00017],[tour_00018],[tour_00019],[tour_00020],[tour_00021],[tour_00022],[tour_00023]]
VARORDER STATIC [tour_00000,tour_00001,tour_00002,tour_00003,tour_00004,tour_00005,tour_00006,tour_00007,tour_00008,tour_00009,tour_00010,tour_00011,tour_00012,tour_00013,tour_00014,tour_00015,tour_00016,tour_00017,tour_00018,tour_00019,tour_00020,tour_00021,tour_00022,tour_00023]
VARORDER AUX [aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,aux56,aux57,aux58,aux59,aux60,aux61,aux62,aux63,aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,aux88,aux89,aux90,aux91,aux92,aux93,aux94,aux95,aux96,aux97,aux98,aux99,aux100,aux101,aux102,aux103,aux104,aux105,aux106,aux107,aux108,aux109,aux110,aux111,aux112,aux113,aux114,aux115,aux116,aux117,aux118,aux119,aux120,aux121,aux122,aux123,aux124,aux125,aux126,aux127,aux128,aux129,aux130,aux131,aux132,aux133,aux134,aux135,aux136,aux137,aux138,aux139,aux140,aux141,aux142,aux143,aux144,aux145,aux146,aux147,aux148,aux149,aux150,aux151,aux152,aux153,aux154,aux155,aux156,aux157,aux158,aux159,aux160,aux161,aux162,aux163,aux164,aux165,aux166,aux167,aux168,aux169,aux170,aux171,aux172,aux173,aux174,aux175,aux176,aux177,aux178,aux179,aux180,aux181,aux182,aux183]
**CONSTRAINTS**
div(tour_00018, 5, aux46)
div(tour_00019, 5, aux47)
modulo(tour_00017,5,aux49)
modulo(tour_00018,5,aux50)
div(tour_00014, 5, aux52)
div(tour_00015, 5, aux53)
div(tour_00011, 5, aux55)
div(tour_00012, 5, aux56)
div(tour_00012, 5, aux58)
div(tour_00013, 5, aux59)
div(tour_00021, 5, aux61)
div(tour_00022, 5, aux62)
modulo(tour_00018,5,aux64)
modulo(tour_00019,5,aux65)
modulo(tour_00011,5,aux67)
modulo(tour_00012,5,aux68)
div(tour_00015, 5, aux70)
div(tour_00016, 5, aux71)
modulo(tour_00016,5,aux73)
modulo(tour_00017,5,aux74)
div(tour_00016, 5, aux76)
div(tour_00017, 5, aux77)
modulo(tour_00014,5,aux79)
modulo(tour_00015,5,aux80)
div(tour_00022, 5, aux82)
div(tour_00023, 5, aux83)
modulo(tour_00019,5,aux85)
modulo(tour_00020,5,aux86)
modulo(tour_00013,5,aux88)
modulo(tour_00014,5,aux89)
div(tour_00010, 5, aux91)
div(tour_00011, 5, aux92)
modulo(tour_00010,5,aux94)
modulo(tour_00011,5,aux95)
modulo(tour_00021,5,aux97)
modulo(tour_00022,5,aux98)
div(tour_00013, 5, aux100)
div(tour_00014, 5, aux101)
div(tour_00020, 5, aux103)
div(tour_00021, 5, aux104)
modulo(tour_00020,5,aux106)
modulo(tour_00021,5,aux107)
modulo(tour_00022,5,aux109)
modulo(tour_00023,5,aux110)
modulo(tour_00012,5,aux112)
modulo(tour_00013,5,aux113)
modulo(tour_00015,5,aux115)
modulo(tour_00016,5,aux116)
div(tour_00019, 5, aux118)
div(tour_00020, 5, aux119)
div(tour_00017, 5, aux121)
div(tour_00018, 5, aux122)
modulo(tour_00009,5,aux124)
modulo(tour_00010,5,aux125)
div(tour_00009, 5, aux127)
div(tour_00010, 5, aux128)
div(tour_00002, 5, aux130)
div(tour_00003, 5, aux131)
div(tour_00003, 5, aux133)
div(tour_00004, 5, aux134)
div(tour_00007, 5, aux136)
div(tour_00008, 5, aux137)
modulo(tour_00005,5,aux139)
modulo(tour_00006,5,aux140)
modulo(tour_00003,5,aux142)
modulo(tour_00004,5,aux143)
div(tour_00005, 5, aux145)
div(tour_00006, 5, aux146)
modulo(tour_00007,5,aux148)
modulo(tour_00008,5,aux149)
div(tour_00000, 5, aux151)
div(tour_00001, 5, aux152)
modulo(tour_00006,5,aux154)
modulo(tour_00007,5,aux155)
div(tour_00001, 5, aux157)
div(tour_00002, 5, aux158)
modulo(tour_00001,5,aux160)
modulo(tour_00002,5,aux161)
modulo(tour_00002,5,aux163)
modulo(tour_00003,5,aux164)
div(tour_00008, 5, aux166)
div(tour_00009, 5, aux167)
div(tour_00004, 5, aux169)
div(tour_00005, 5, aux170)
modulo(tour_00008,5,aux172)
modulo(tour_00009,5,aux173)
modulo(tour_00004,5,aux175)
modulo(tour_00005,5,aux176)
modulo(tour_00000,5,aux178)
modulo(tour_00001,5,aux179)
div(tour_00006, 5, aux181)
div(tour_00007, 5, aux182)
abs(aux0, aux48)
abs(aux1, aux51)
abs(aux2, aux54)
abs(aux3, aux57)
abs(aux4, aux60)
abs(aux5, aux63)
abs(aux6, aux66)
abs(aux7, aux69)
abs(aux8, aux72)
abs(aux9, aux75)
abs(aux10, aux78)
abs(aux11, aux81)
abs(aux12, aux84)
abs(aux13, aux87)
abs(aux14, aux90)
abs(aux15, aux93)
abs(aux16, aux96)
abs(aux17, aux99)
abs(aux18, aux102)
abs(aux19, aux105)
abs(aux20, aux108)
abs(aux21, aux111)
abs(aux22, aux114)
abs(aux23, aux117)
abs(aux24, aux120)
abs(aux25, aux123)
abs(aux26, aux126)
abs(aux27, aux129)
abs(aux28, aux132)
abs(aux29, aux135)
abs(aux30, aux138)
abs(aux31, aux141)
abs(aux32, aux144)
abs(aux33, aux147)
abs(aux34, aux150)
abs(aux35, aux153)
abs(aux36, aux156)
abs(aux37, aux159)
abs(aux38, aux162)
abs(aux39, aux165)
abs(aux40, aux168)
abs(aux41, aux171)
abs(aux42, aux174)
abs(aux43, aux177)
abs(aux44, aux180)
abs(aux45, aux183)
gacalldiff([tour_00000, tour_00001, tour_00002, tour_00003, tour_00004, tour_00005, tour_00006, tour_00007, tour_00008, tour_00009, tour_00010, tour_00011, tour_00012, tour_00013, tour_00014, tour_00015, tour_00016, tour_00017, tour_00018, tour_00019, tour_00020, tour_00021, tour_00022, tour_00023])
w-literal(tour_00000,0)
watched-or({watched-and({w-literal(aux44,1),w-literal(aux35,2)}),watched-and({w-literal(aux44,2),w-literal(aux35,1)})})
watched-or({watched-and({w-literal(aux38,1),w-literal(aux37,2)}),watched-and({w-literal(aux38,2),w-literal(aux37,1)})})
watched-or({watched-and({w-literal(aux39,1),w-literal(aux28,2)}),watched-and({w-literal(aux39,2),w-literal(aux28,1)})})
watched-or({watched-and({w-literal(aux32,1),w-literal(aux29,2)}),watched-and({w-literal(aux32,2),w-literal(aux29,1)})})
watched-or({watched-and({w-literal(aux43,2),w-literal(aux41,1)}),watched-and({w-literal(aux43,1),w-literal(aux41,2)})})
watched-or({watched-and({w-literal(aux31,2),w-literal(aux33,1)}),watched-and({w-literal(aux31,1),w-literal(aux33,2)})})
watched-or({watched-and({w-literal(aux36,1),w-literal(aux45,2)}),watched-and({w-literal(aux36,2),w-literal(aux45,1)})})
watched-or({watched-and({w-literal(aux34,2),w-literal(aux30,1)}),watched-and({w-literal(aux34,1),w-literal(aux30,2)})})
watched-or({watched-and({w-literal(aux42,1),w-literal(aux40,2)}),watched-and({w-literal(aux42,2),w-literal(aux40,1)})})
watched-or({watched-and({w-literal(aux26,2),w-literal(aux27,1)}),watched-and({w-literal(aux26,1),w-literal(aux27,2)})})
watched-or({watched-and({w-literal(aux16,2),w-literal(aux15,1)}),watched-and({w-literal(aux16,1),w-literal(aux15,2)})})
watched-or({watched-and({w-literal(aux7,2),w-literal(aux3,1)}),watched-and({w-literal(aux7,1),w-literal(aux3,2)})})
watched-or({watched-and({w-literal(aux22,2),w-literal(aux4,1)}),watched-and({w-literal(aux22,1),w-literal(aux4,2)})})
watched-or({watched-and({w-literal(aux14,2),w-literal(aux18,1)}),watched-and({w-literal(aux14,1),w-literal(aux18,2)})})
watched-or({watched-and({w-literal(aux11,1),w-literal(aux2,2)}),watched-and({w-literal(aux11,2),w-literal(aux2,1)})})
watched-or({watched-and({w-literal(aux23,2),w-literal(aux8,1)}),watched-and({w-literal(aux23,1),w-literal(aux8,2)})})
watched-or({watched-and({w-literal(aux9,1),w-literal(aux10,2)}),watched-and({w-literal(aux9,2),w-literal(aux10,1)})})
watched-or({watched-and({w-literal(aux1,2),w-literal(aux25,1)}),watched-and({w-literal(aux1,1),w-literal(aux25,2)})})
watched-or({watched-and({w-literal(aux6,1),w-literal(aux0,2)}),watched-and({w-literal(aux6,2),w-literal(aux0,1)})})
watched-or({watched-and({w-literal(aux13,1),w-literal(aux24,2)}),watched-and({w-literal(aux13,2),w-literal(aux24,1)})})
watched-or({watched-and({w-literal(aux20,2),w-literal(aux19,1)}),watched-and({w-literal(aux20,1),w-literal(aux19,2)})})
watched-or({watched-and({w-literal(aux17,2),w-literal(aux5,1)}),watched-and({w-literal(aux17,1),w-literal(aux5,2)})})
watched-or({watched-and({w-literal(aux21,1),w-literal(aux12,2)}),watched-and({w-literal(aux21,2),w-literal(aux12,1)})})
weightedsumleq([1,-1],[aux46,aux47],aux48)
weightedsumgeq([1,-1],[aux46,aux47],aux48)
weightedsumleq([1,-1],[aux49,aux50],aux51)
weightedsumgeq([1,-1],[aux49,aux50],aux51)
weightedsumleq([1,-1],[aux52,aux53],aux54)
weightedsumgeq([1,-1],[aux52,aux53],aux54)
weightedsumleq([1,-1],[aux55,aux56],aux57)
weightedsumgeq([1,-1],[aux55,aux56],aux57)
weightedsumleq([1,-1],[aux58,aux59],aux60)
weightedsumgeq([1,-1],[aux58,aux59],aux60)
weightedsumleq([1,-1],[aux61,aux62],aux63)
weightedsumgeq([1,-1],[aux61,aux62],aux63)
weightedsumleq([1,-1],[aux64,aux65],aux66)
weightedsumgeq([1,-1],[aux64,aux65],aux66)
weightedsumleq([1,-1],[aux67,aux68],aux69)
weightedsumgeq([1,-1],[aux67,aux68],aux69)
weightedsumleq([1,-1],[aux70,aux71],aux72)
weightedsumgeq([1,-1],[aux70,aux71],aux72)
weightedsumleq([1,-1],[aux73,aux74],aux75)
weightedsumgeq([1,-1],[aux73,aux74],aux75)
weightedsumleq([1,-1],[aux76,aux77],aux78)
weightedsumgeq([1,-1],[aux76,aux77],aux78)
weightedsumleq([1,-1],[aux79,aux80],aux81)
weightedsumgeq([1,-1],[aux79,aux80],aux81)
weightedsumleq([1,-1],[aux82,aux83],aux84)
weightedsumgeq([1,-1],[aux82,aux83],aux84)
weightedsumleq([1,-1],[aux85,aux86],aux87)
weightedsumgeq([1,-1],[aux85,aux86],aux87)
weightedsumleq([1,-1],[aux88,aux89],aux90)
weightedsumgeq([1,-1],[aux88,aux89],aux90)
weightedsumleq([1,-1],[aux91,aux92],aux93)
weightedsumgeq([1,-1],[aux91,aux92],aux93)
weightedsumleq([1,-1],[aux94,aux95],aux96)
weightedsumgeq([1,-1],[aux94,aux95],aux96)
weightedsumleq([1,-1],[aux97,aux98],aux99)
weightedsumgeq([1,-1],[aux97,aux98],aux99)
weightedsumleq([1,-1],[aux100,aux101],aux102)
weightedsumgeq([1,-1],[aux100,aux101],aux102)
weightedsumleq([1,-1],[aux103,aux104],aux105)
weightedsumgeq([1,-1],[aux103,aux104],aux105)
weightedsumleq([1,-1],[aux106,aux107],aux108)
weightedsumgeq([1,-1],[aux106,aux107],aux108)
weightedsumleq([1,-1],[aux109,aux110],aux111)
weightedsumgeq([1,-1],[aux109,aux110],aux111)
weightedsumleq([1,-1],[aux112,aux113],aux114)
weightedsumgeq([1,-1],[aux112,aux113],aux114)
weightedsumleq([1,-1],[aux115,aux116],aux117)
weightedsumgeq([1,-1],[aux115,aux116],aux117)
weightedsumleq([1,-1],[aux118,aux119],aux120)
weightedsumgeq([1,-1],[aux118,aux119],aux120)
weightedsumleq([1,-1],[aux121,aux122],aux123)
weightedsumgeq([1,-1],[aux121,aux122],aux123)
weightedsumleq([1,-1],[aux124,aux125],aux126)
weightedsumgeq([1,-1],[aux124,aux125],aux126)
weightedsumleq([1,-1],[aux127,aux128],aux129)
weightedsumgeq([1,-1],[aux127,aux128],aux129)
weightedsumleq([1,-1],[aux130,aux131],aux132)
weightedsumgeq([1,-1],[aux130,aux131],aux132)
weightedsumleq([1,-1],[aux133,aux134],aux135)
weightedsumgeq([1,-1],[aux133,aux134],aux135)
weightedsumleq([1,-1],[aux136,aux137],aux138)
weightedsumgeq([1,-1],[aux136,aux137],aux138)
weightedsumleq([1,-1],[aux139,aux140],aux141)
weightedsumgeq([1,-1],[aux139,aux140],aux141)
weightedsumleq([1,-1],[aux142,aux143],aux144)
weightedsumgeq([1,-1],[aux142,aux143],aux144)
weightedsumleq([1,-1],[aux145,aux146],aux147)
weightedsumgeq([1,-1],[aux145,aux146],aux147)
weightedsumleq([1,-1],[aux148,aux149],aux150)
weightedsumgeq([1,-1],[aux148,aux149],aux150)
weightedsumleq([1,-1],[aux151,aux152],aux153)
weightedsumgeq([1,-1],[aux151,aux152],aux153)
weightedsumleq([1,-1],[aux154,aux155],aux156)
weightedsumgeq([1,-1],[aux154,aux155],aux156)
weightedsumleq([1,-1],[aux157,aux158],aux159)
weightedsumgeq([1,-1],[aux157,aux158],aux159)
weightedsumleq([1,-1],[aux160,aux161],aux162)
weightedsumgeq([1,-1],[aux160,aux161],aux162)
weightedsumleq([1,-1],[aux163,aux164],aux165)
weightedsumgeq([1,-1],[aux163,aux164],aux165)
weightedsumleq([1,-1],[aux166,aux167],aux168)
weightedsumgeq([1,-1],[aux166,aux167],aux168)
weightedsumleq([1,-1],[aux169,aux170],aux171)
weightedsumgeq([1,-1],[aux169,aux170],aux171)
weightedsumleq([1,-1],[aux172,aux173],aux174)
weightedsumgeq([1,-1],[aux172,aux173],aux174)
weightedsumleq([1,-1],[aux175,aux176],aux177)
weightedsumgeq([1,-1],[aux175,aux176],aux177)
weightedsumleq([1,-1],[aux178,aux179],aux180)
weightedsumgeq([1,-1],[aux178,aux179],aux180)
weightedsumleq([1,-1],[aux181,aux182],aux183)
weightedsumgeq([1,-1],[aux181,aux182],aux183)
**EOF**
