MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_number = 137
# CSE_eliminated_expressions = 484
# CSE_total_size = 587
**VARIABLES**
DISCRETE Roster_00000_00000 #
{0..3}
DISCRETE Roster_00000_00001 #
{0..3}
DISCRETE Roster_00000_00002 #
{0..3}
DISCRETE Roster_00000_00003 #
{0..3}
DISCRETE Roster_00000_00004 #
{0..3}
DISCRETE Roster_00000_00005 #
{0..3}
DISCRETE Roster_00001_00000 #
{0..3}
DISCRETE Roster_00001_00001 #
{0..3}
DISCRETE Roster_00001_00002 #
{0..3}
DISCRETE Roster_00001_00003 #
{0..3}
DISCRETE Roster_00001_00004 #
{0..3}
DISCRETE Roster_00001_00005 #
{0..3}
DISCRETE Roster_00002_00000 #
{0..3}
DISCRETE Roster_00002_00001 #
{0..3}
DISCRETE Roster_00002_00002 #
{0..3}
DISCRETE Roster_00002_00003 #
{0..3}
DISCRETE Roster_00002_00004 #
{0..3}
DISCRETE Roster_00002_00005 #
{0..3}
DISCRETE Roster_00003_00000 #
{0..3}
DISCRETE Roster_00003_00001 #
{0..3}
DISCRETE Roster_00003_00002 #
{0..3}
DISCRETE Roster_00003_00003 #
{0..3}
DISCRETE Roster_00003_00004 #
{0..3}
DISCRETE Roster_00003_00005 #
{0..3}
DISCRETE Roster_00004_00000 #
{0..3}
DISCRETE Roster_00004_00001 #
{0..3}
DISCRETE Roster_00004_00002 #
{0..3}
DISCRETE Roster_00004_00003 #
{0..3}
DISCRETE Roster_00004_00004 #
{0..3}
DISCRETE Roster_00004_00005 #
{0..3}
DISCRETE Roster_00005_00000 #
{0..3}
DISCRETE Roster_00005_00001 #
{0..3}
DISCRETE Roster_00005_00002 #
{0..3}
DISCRETE Roster_00005_00003 #
{0..3}
DISCRETE Roster_00005_00004 #
{0..3}
DISCRETE Roster_00005_00005 #
{0..3}
DISCRETE Roster_00006_00000 #
{0..3}
DISCRETE Roster_00006_00001 #
{0..3}
DISCRETE Roster_00006_00002 #
{0..3}
DISCRETE Roster_00006_00003 #
{0..3}
DISCRETE Roster_00006_00004 #
{0..3}
DISCRETE Roster_00006_00005 #
{0..3}
DISCRETE aux0 #CSE: 2 occurrences of: ((Roster_00004_00000=0) + (Roster_00004_00001=0) + (Roster_00004_00002=0) + (Roster_00004_00003=0) + (Roster_00004_00004=0) + (Roster_00004_00005=0))
{0..6}
DISCRETE aux1 #CSE: 2 occurrences of: ((Roster_00005_00000=0) + (Roster_00005_00001=0) + (Roster_00005_00002=0) + (Roster_00005_00003=0) + (Roster_00005_00004=0) + (Roster_00005_00005=0))
{0..6}
DISCRETE aux2 #CSE: 2 occurrences of: ((Roster_00000_00000=0) + (Roster_00000_00001=0) + (Roster_00000_00002=0) + (Roster_00000_00003=0) + (Roster_00000_00004=0) + (Roster_00000_00005=0))
{0..6}
DISCRETE aux3 #CSE: 2 occurrences of: ((1=Roster_00002_00000) + (1=Roster_00002_00001) + (1=Roster_00002_00002) + (1=Roster_00002_00003) + (1=Roster_00002_00004) + (1=Roster_00002_00005))
{0..6}
DISCRETE aux4 #CSE: 2 occurrences of: ((Roster_00006_00000=1) + (Roster_00006_00001=1) + (Roster_00006_00002=1) + (Roster_00006_00003=1) + (Roster_00006_00004=1) + (Roster_00006_00005=1))
{0..6}
DISCRETE aux5 #CSE: 2 occurrences of: ((0=Roster_00003_00000) + (0=Roster_00003_00001) + (0=Roster_00003_00002) + (0=Roster_00003_00003) + (0=Roster_00003_00004) + (0=Roster_00003_00005))
{0..6}
DISCRETE aux6 #CSE: 2 occurrences of: ((0=Roster_00002_00000) + (0=Roster_00002_00001) + (0=Roster_00002_00002) + (0=Roster_00002_00003) + (0=Roster_00002_00004) + (0=Roster_00002_00005))
{0..6}
DISCRETE aux7 #CSE: 2 occurrences of: ((Roster_00001_00000=2) + (Roster_00001_00001=2) + (Roster_00001_00002=2) + (Roster_00001_00003=2) + (Roster_00001_00004=2) + (Roster_00001_00005=2))
{0..6}
DISCRETE aux8 #CSE: 2 occurrences of: ((Roster_00004_00000=2) + (Roster_00004_00001=2) + (Roster_00004_00002=2) + (Roster_00004_00003=2) + (Roster_00004_00004=2) + (Roster_00004_00005=2))
{0..6}
DISCRETE aux9 #CSE: 2 occurrences of: ((Roster_00000_00000=2) + (Roster_00000_00001=2) + (Roster_00000_00002=2) + (Roster_00000_00003=2) + (Roster_00000_00004=2) + (Roster_00000_00005=2))
{0..6}
DISCRETE aux10 #CSE: 2 occurrences of: ((Roster_00005_00000=2) + (Roster_00005_00001=2) + (Roster_00005_00002=2) + (Roster_00005_00003=2) + (Roster_00005_00004=2) + (Roster_00005_00005=2))
{0..6}
BOOL aux11 #CSE: 5 occurrences of: (Roster_00004_00004=2)
BOOL aux12 #CSE: 5 occurrences of: (Roster_00001_00005=2)
BOOL aux13 #CSE: 5 occurrences of: (Roster_00000_00001=2)
BOOL aux14 #CSE: 3 occurrences of: (Roster_00004_00000=0)
BOOL aux15 #CSE: 3 occurrences of: (Roster_00004_00003=0)
BOOL aux16 #CSE: 3 occurrences of: (Roster_00004_00004=0)
BOOL aux17 #CSE: 3 occurrences of: (Roster_00004_00001=0)
BOOL aux18 #CSE: 3 occurrences of: (Roster_00004_00002=0)
BOOL aux19 #CSE: 3 occurrences of: (Roster_00004_00005=0)
BOOL aux20 #CSE: 3 occurrences of: (Roster_00001_00000=3)
BOOL aux21 #CSE: 3 occurrences of: (Roster_00001_00000=0)
BOOL aux22 #CSE: 3 occurrences of: (Roster_00001_00005=0)
BOOL aux23 #CSE: 3 occurrences of: (Roster_00001_00005=3)
BOOL aux24 #CSE: 3 occurrences of: (Roster_00001_00002=3)
BOOL aux25 #CSE: 3 occurrences of: (Roster_00001_00002=0)
BOOL aux26 #CSE: 3 occurrences of: (Roster_00001_00001=0)
BOOL aux27 #CSE: 3 occurrences of: (Roster_00001_00001=3)
BOOL aux28 #CSE: 3 occurrences of: (Roster_00001_00004=3)
BOOL aux29 #CSE: 3 occurrences of: (Roster_00001_00004=0)
BOOL aux30 #CSE: 3 occurrences of: (Roster_00001_00003=0)
BOOL aux31 #CSE: 3 occurrences of: (Roster_00001_00003=3)
BOOL aux32 #CSE: 5 occurrences of: (Roster_00005_00003=2)
BOOL aux33 #CSE: 5 occurrences of: (Roster_00004_00000=2)
BOOL aux34 #CSE: 5 occurrences of: (Roster_00000_00005=2)
BOOL aux35 #CSE: 5 occurrences of: (Roster_00004_00005=2)
BOOL aux36 #CSE: 5 occurrences of: (Roster_00001_00001=2)
BOOL aux37 #CSE: 5 occurrences of: (Roster_00005_00000=2)
BOOL aux38 #CSE: 5 occurrences of: (Roster_00000_00002=2)
BOOL aux39 #CSE: 5 occurrences of: (Roster_00004_00003=2)
BOOL aux40 #CSE: 5 occurrences of: (Roster_00005_00005=2)
BOOL aux41 #CSE: 5 occurrences of: (2=Roster_00002_00001)
BOOL aux42 #CSE: 5 occurrences of: (2=Roster_00002_00002)
BOOL aux43 #CSE: 5 occurrences of: (2=Roster_00002_00003)
BOOL aux44 #CSE: 5 occurrences of: (2=Roster_00002_00004)
BOOL aux45 #CSE: 5 occurrences of: (2=Roster_00002_00005)
BOOL aux46 #CSE: 5 occurrences of: (2=Roster_00002_00000)
BOOL aux47 #CSE: 5 occurrences of: (Roster_00001_00002=2)
BOOL aux48 #CSE: 5 occurrences of: (Roster_00005_00004=2)
BOOL aux49 #CSE: 3 occurrences of: (Roster_00005_00005=3)
BOOL aux50 #CSE: 3 occurrences of: (Roster_00005_00003=3)
BOOL aux51 #CSE: 3 occurrences of: (Roster_00005_00004=3)
BOOL aux52 #CSE: 3 occurrences of: (Roster_00005_00001=3)
BOOL aux53 #CSE: 3 occurrences of: (Roster_00005_00002=3)
BOOL aux54 #CSE: 3 occurrences of: (Roster_00005_00000=3)
BOOL aux55 #CSE: 3 occurrences of: (Roster_00005_00004=0)
BOOL aux56 #CSE: 3 occurrences of: (Roster_00005_00005=0)
BOOL aux57 #CSE: 3 occurrences of: (Roster_00005_00000=0)
BOOL aux58 #CSE: 3 occurrences of: (Roster_00005_00001=0)
BOOL aux59 #CSE: 3 occurrences of: (Roster_00005_00003=0)
BOOL aux60 #CSE: 3 occurrences of: (Roster_00005_00002=0)
BOOL aux61 #CSE: 3 occurrences of: (Roster_00000_00002=3)
BOOL aux62 #CSE: 3 occurrences of: (Roster_00000_00001=3)
BOOL aux63 #CSE: 3 occurrences of: (Roster_00000_00000=3)
BOOL aux64 #CSE: 3 occurrences of: (Roster_00000_00005=3)
BOOL aux65 #CSE: 3 occurrences of: (Roster_00000_00004=3)
BOOL aux66 #CSE: 3 occurrences of: (Roster_00000_00003=3)
BOOL aux67 #CSE: 5 occurrences of: (Roster_00000_00003=2)
BOOL aux68 #CSE: 3 occurrences of: (0=Roster_00003_00004)
BOOL aux69 #CSE: 3 occurrences of: (0=Roster_00003_00003)
BOOL aux70 #CSE: 3 occurrences of: (0=Roster_00003_00005)
BOOL aux71 #CSE: 3 occurrences of: (0=Roster_00003_00000)
BOOL aux72 #CSE: 3 occurrences of: (0=Roster_00003_00002)
BOOL aux73 #CSE: 3 occurrences of: (0=Roster_00003_00001)
BOOL aux74 #CSE: 5 occurrences of: (Roster_00001_00003=2)
BOOL aux75 #CSE: 3 occurrences of: (3=Roster_00003_00001)
BOOL aux76 #CSE: 3 occurrences of: (3=Roster_00003_00002)
BOOL aux77 #CSE: 3 occurrences of: (3=Roster_00003_00000)
BOOL aux78 #CSE: 3 occurrences of: (3=Roster_00003_00005)
BOOL aux79 #CSE: 3 occurrences of: (3=Roster_00003_00004)
BOOL aux80 #CSE: 3 occurrences of: (3=Roster_00003_00003)
BOOL aux81 #CSE: 3 occurrences of: (0=Roster_00002_00000)
BOOL aux82 #CSE: 3 occurrences of: (0=Roster_00002_00001)
BOOL aux83 #CSE: 3 occurrences of: (0=Roster_00002_00003)
BOOL aux84 #CSE: 3 occurrences of: (0=Roster_00002_00002)
BOOL aux85 #CSE: 3 occurrences of: (0=Roster_00002_00004)
BOOL aux86 #CSE: 3 occurrences of: (0=Roster_00002_00005)
BOOL aux87 #CSE: 5 occurrences of: (Roster_00004_00002=2)
BOOL aux88 #CSE: 3 occurrences of: (Roster_00004_00003=3)
BOOL aux89 #CSE: 3 occurrences of: (Roster_00004_00004=3)
BOOL aux90 #CSE: 3 occurrences of: (Roster_00004_00005=3)
BOOL aux91 #CSE: 3 occurrences of: (Roster_00004_00000=3)
BOOL aux92 #CSE: 3 occurrences of: (Roster_00004_00001=3)
BOOL aux93 #CSE: 3 occurrences of: (Roster_00004_00002=3)
BOOL aux94 #CSE: 5 occurrences of: (2=Roster_00003_00004)
BOOL aux95 #CSE: 5 occurrences of: (2=Roster_00003_00005)
BOOL aux96 #CSE: 5 occurrences of: (2=Roster_00003_00002)
BOOL aux97 #CSE: 5 occurrences of: (2=Roster_00003_00003)
BOOL aux98 #CSE: 5 occurrences of: (2=Roster_00003_00000)
BOOL aux99 #CSE: 5 occurrences of: (2=Roster_00003_00001)
BOOL aux100 #CSE: 5 occurrences of: (Roster_00005_00001=2)
BOOL aux101 #CSE: 5 occurrences of: (Roster_00006_00005=2)
BOOL aux102 #CSE: 5 occurrences of: (Roster_00006_00002=2)
BOOL aux103 #CSE: 5 occurrences of: (Roster_00001_00004=2)
BOOL aux104 #CSE: 5 occurrences of: (Roster_00006_00003=2)
BOOL aux105 #CSE: 5 occurrences of: (Roster_00000_00000=2)
BOOL aux106 #CSE: 5 occurrences of: (Roster_00006_00004=2)
BOOL aux107 #CSE: 5 occurrences of: (Roster_00006_00000=2)
BOOL aux108 #CSE: 3 occurrences of: (Roster_00006_00000=3)
BOOL aux109 #CSE: 3 occurrences of: (Roster_00006_00000=0)
BOOL aux110 #CSE: 3 occurrences of: (Roster_00006_00002=0)
BOOL aux111 #CSE: 3 occurrences of: (Roster_00006_00002=3)
BOOL aux112 #CSE: 3 occurrences of: (Roster_00006_00001=0)
BOOL aux113 #CSE: 3 occurrences of: (Roster_00006_00001=3)
BOOL aux114 #CSE: 3 occurrences of: (Roster_00006_00004=3)
BOOL aux115 #CSE: 3 occurrences of: (Roster_00006_00004=0)
BOOL aux116 #CSE: 3 occurrences of: (Roster_00006_00003=0)
BOOL aux117 #CSE: 3 occurrences of: (Roster_00006_00003=3)
BOOL aux118 #CSE: 3 occurrences of: (Roster_00006_00005=0)
BOOL aux119 #CSE: 3 occurrences of: (Roster_00006_00005=3)
BOOL aux120 #CSE: 5 occurrences of: (Roster_00006_00001=2)
BOOL aux121 #CSE: 3 occurrences of: (Roster_00000_00001=0)
BOOL aux122 #CSE: 3 occurrences of: (Roster_00000_00000=0)
BOOL aux123 #CSE: 3 occurrences of: (Roster_00000_00004=0)
BOOL aux124 #CSE: 3 occurrences of: (Roster_00000_00005=0)
BOOL aux125 #CSE: 3 occurrences of: (Roster_00000_00002=0)
BOOL aux126 #CSE: 3 occurrences of: (Roster_00000_00003=0)
BOOL aux127 #CSE: 5 occurrences of: (Roster_00004_00001=2)
BOOL aux128 #CSE: 3 occurrences of: (3=Roster_00002_00004)
BOOL aux129 #CSE: 3 occurrences of: (3=Roster_00002_00005)
BOOL aux130 #CSE: 3 occurrences of: (3=Roster_00002_00000)
BOOL aux131 #CSE: 3 occurrences of: (3=Roster_00002_00001)
BOOL aux132 #CSE: 3 occurrences of: (3=Roster_00002_00002)
BOOL aux133 #CSE: 3 occurrences of: (3=Roster_00002_00003)
BOOL aux134 #CSE: 5 occurrences of: (Roster_00001_00000=2)
BOOL aux135 #CSE: 5 occurrences of: (Roster_00005_00002=2)
BOOL aux136 #CSE: 5 occurrences of: (Roster_00000_00004=2)
BOOL aux137 #(1=Roster_00002_00000)
BOOL aux138 #(1=Roster_00002_00001)
BOOL aux139 #(1=Roster_00002_00002)
BOOL aux140 #(1=Roster_00002_00003)
BOOL aux141 #(1=Roster_00002_00004)
BOOL aux142 #(1=Roster_00002_00005)
BOOL aux143 #(Roster_00006_00000=1)
BOOL aux144 #(Roster_00006_00001=1)
BOOL aux145 #(Roster_00006_00002=1)
BOOL aux146 #(Roster_00006_00003=1)
BOOL aux147 #(Roster_00006_00004=1)
BOOL aux148 #(Roster_00006_00005=1)
BOOL aux149 #(Roster_00000_00000=1)
BOOL aux150 #(Roster_00000_00001=1)
BOOL aux151 #(Roster_00000_00002=1)
BOOL aux152 #(Roster_00000_00003=1)
BOOL aux153 #(Roster_00000_00004=1)
BOOL aux154 #(Roster_00000_00005=1)
BOOL aux155 #(Roster_00001_00000=1)
BOOL aux156 #(Roster_00001_00001=1)
BOOL aux157 #(Roster_00001_00002=1)
BOOL aux158 #(Roster_00001_00003=1)
BOOL aux159 #(Roster_00001_00004=1)
BOOL aux160 #(Roster_00001_00005=1)
BOOL aux161 #(1=Roster_00003_00000)
BOOL aux162 #(1=Roster_00003_00001)
BOOL aux163 #(1=Roster_00003_00002)
BOOL aux164 #(1=Roster_00003_00003)
BOOL aux165 #(1=Roster_00003_00004)
BOOL aux166 #(1=Roster_00003_00005)
BOOL aux167 #(Roster_00004_00000=1)
BOOL aux168 #(Roster_00004_00001=1)
BOOL aux169 #(Roster_00004_00002=1)
BOOL aux170 #(Roster_00004_00003=1)
BOOL aux171 #(Roster_00004_00004=1)
BOOL aux172 #(Roster_00004_00005=1)
BOOL aux173 #(Roster_00005_00000=1)
BOOL aux174 #(Roster_00005_00001=1)
BOOL aux175 #(Roster_00005_00002=1)
BOOL aux176 #(Roster_00005_00003=1)
BOOL aux177 #(Roster_00005_00004=1)
BOOL aux178 #(Roster_00005_00005=1)
BOOL aux179 #(aux134 \/ aux20)
BOOL aux180 #(aux46 \/ aux130)
BOOL aux181 #(aux98 \/ aux77)
BOOL aux182 #(aux33 \/ aux91)
BOOL aux183 #(aux37 \/ aux54)
BOOL aux184 #(aux107 \/ aux108)
BOOL aux185 #(aux105 \/ aux63)
BOOL aux186 #(aux36 \/ aux27)
BOOL aux187 #(aux41 \/ aux131)
BOOL aux188 #(aux99 \/ aux75)
BOOL aux189 #(aux127 \/ aux92)
BOOL aux190 #(aux100 \/ aux52)
BOOL aux191 #(aux120 \/ aux113)
BOOL aux192 #(aux13 \/ aux62)
BOOL aux193 #(aux47 \/ aux24)
BOOL aux194 #(aux42 \/ aux132)
BOOL aux195 #(aux96 \/ aux76)
BOOL aux196 #(aux87 \/ aux93)
BOOL aux197 #(aux135 \/ aux53)
BOOL aux198 #(aux102 \/ aux111)
BOOL aux199 #(aux38 \/ aux61)
BOOL aux200 #(aux74 \/ aux31)
BOOL aux201 #(aux43 \/ aux133)
BOOL aux202 #(aux97 \/ aux80)
BOOL aux203 #(aux39 \/ aux88)
BOOL aux204 #(aux32 \/ aux50)
BOOL aux205 #(aux104 \/ aux117)
BOOL aux206 #(aux67 \/ aux66)
BOOL aux207 #(aux103 \/ aux28)
BOOL aux208 #(aux44 \/ aux128)
BOOL aux209 #(aux94 \/ aux79)
BOOL aux210 #(aux11 \/ aux89)
BOOL aux211 #(aux48 \/ aux51)
BOOL aux212 #(aux106 \/ aux114)
BOOL aux213 #(aux136 \/ aux65)
BOOL aux214 #(aux12 \/ aux23)
BOOL aux215 #(aux45 \/ aux129)
BOOL aux216 #(aux95 \/ aux78)
BOOL aux217 #(aux35 \/ aux90)
BOOL aux218 #(aux40 \/ aux49)
BOOL aux219 #(aux101 \/ aux119)
BOOL aux220 #(aux34 \/ aux64)
**TUPLELIST**
Demand 7 4
1 0 1 0 
0 0 1 0 
1 2 0 0 
1 0 0 0 
1 0 1 0 
1 0 1 0 
0 2 0 0 
**VARIABLES**
ALIAS Demand[7,4]=[[1, 0, 1, 0], [0, 0, 1, 0], [1, 2, 0, 0], [1, 0, 0, 0], [1, 0, 1, 0], [1, 0, 1, 0], [0, 2, 0, 0]]
**SEARCH**
PRINT[[Roster_00000_00000],[Roster_00000_00001],[Roster_00000_00002],[Roster_00000_00003],[Roster_00000_00004],[Roster_00000_00005],[Roster_00001_00000],[Roster_00001_00001],[Roster_00001_00002],[Roster_00001_00003],[Roster_00001_00004],[Roster_00001_00005],[Roster_00002_00000],[Roster_00002_00001],[Roster_00002_00002],[Roster_00002_00003],[Roster_00002_00004],[Roster_00002_00005],[Roster_00003_00000],[Roster_00003_00001],[Roster_00003_00002],[Roster_00003_00003],[Roster_00003_00004],[Roster_00003_00005],[Roster_00004_00000],[Roster_00004_00001],[Roster_00004_00002],[Roster_00004_00003],[Roster_00004_00004],[Roster_00004_00005],[Roster_00005_00000],[Roster_00005_00001],[Roster_00005_00002],[Roster_00005_00003],[Roster_00005_00004],[Roster_00005_00005],[Roster_00006_00000],[Roster_00006_00001],[Roster_00006_00002],[Roster_00006_00003],[Roster_00006_00004],[Roster_00006_00005]]
VARORDER STATIC [Roster_00000_00000,Roster_00000_00001,Roster_00000_00002,Roster_00000_00003,Roster_00000_00004,Roster_00000_00005,Roster_00001_00000,Roster_00001_00001,Roster_00001_00002,Roster_00001_00003,Roster_00001_00004,Roster_00001_00005,Roster_00002_00000,Roster_00002_00001,Roster_00002_00002,Roster_00002_00003,Roster_00002_00004,Roster_00002_00005,Roster_00003_00000,Roster_00003_00001,Roster_00003_00002,Roster_00003_00003,Roster_00003_00004,Roster_00003_00005,Roster_00004_00000,Roster_00004_00001,Roster_00004_00002,Roster_00004_00003,Roster_00004_00004,Roster_00004_00005,Roster_00005_00000,Roster_00005_00001,Roster_00005_00002,Roster_00005_00003,Roster_00005_00004,Roster_00005_00005,Roster_00006_00000,Roster_00006_00001,Roster_00006_00002,Roster_00006_00003,Roster_00006_00004,Roster_00006_00005]
VARORDER AUX [aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,aux16,aux17,aux18,aux19,aux20,aux21,aux22,aux23,aux24,aux25,aux26,aux27,aux28,aux29,aux30,aux31,aux32,aux33,aux34,aux35,aux36,aux37,aux38,aux39,aux40,aux41,aux42,aux43,aux44,aux45,aux46,aux47,aux48,aux49,aux50,aux51,aux52,aux53,aux54,aux55,aux56,aux57,aux58,aux59,aux60,aux61,aux62,aux63,aux64,aux65,aux66,aux67,aux68,aux69,aux70,aux71,aux72,aux73,aux74,aux75,aux76,aux77,aux78,aux79,aux80,aux81,aux82,aux83,aux84,aux85,aux86,aux87,aux88,aux89,aux90,aux91,aux92,aux93,aux94,aux95,aux96,aux97,aux98,aux99,aux100,aux101,aux102,aux103,aux104,aux105,aux106,aux107,aux108,aux109,aux110,aux111,aux112,aux113,aux114,aux115,aux116,aux117,aux118,aux119,aux120,aux121,aux122,aux123,aux124,aux125,aux126,aux127,aux128,aux129,aux130,aux131,aux132,aux133,aux134,aux135,aux136,aux137,aux138,aux139,aux140,aux141,aux142,aux143,aux144,aux145,aux146,aux147,aux148,aux149,aux150,aux151,aux152,aux153,aux154,aux155,aux156,aux157,aux158,aux159,aux160,aux161,aux162,aux163,aux164,aux165,aux166,aux167,aux168,aux169,aux170,aux171,aux172,aux173,aux174,aux175,aux176,aux177,aux178,aux179,aux180,aux181,aux182,aux183,aux184,aux185,aux186,aux187,aux188,aux189,aux190,aux191,aux192,aux193,aux194,aux195,aux196,aux197,aux198,aux199,aux200,aux201,aux202,aux203,aux204,aux205,aux206,aux207,aux208,aux209,aux210,aux211,aux212,aux213,aux214,aux215,aux216,aux217,aux218,aux219,aux220]
**CONSTRAINTS**
reify(w-literal(Roster_00002_00000,1), aux137)
reify(w-literal(Roster_00002_00001,1), aux138)
reify(w-literal(Roster_00002_00002,1), aux139)
reify(w-literal(Roster_00002_00003,1), aux140)
reify(w-literal(Roster_00002_00004,1), aux141)
reify(w-literal(Roster_00002_00005,1), aux142)
reify(w-literal(Roster_00006_00000,1), aux143)
reify(w-literal(Roster_00006_00001,1), aux144)
reify(w-literal(Roster_00006_00002,1), aux145)
reify(w-literal(Roster_00006_00003,1), aux146)
reify(w-literal(Roster_00006_00004,1), aux147)
reify(w-literal(Roster_00006_00005,1), aux148)
reify(w-literal(Roster_00000_00000,1), aux149)
reify(w-literal(Roster_00000_00001,1), aux150)
reify(w-literal(Roster_00000_00002,1), aux151)
reify(w-literal(Roster_00000_00003,1), aux152)
reify(w-literal(Roster_00000_00004,1), aux153)
reify(w-literal(Roster_00000_00005,1), aux154)
reify(w-literal(Roster_00001_00000,1), aux155)
reify(w-literal(Roster_00001_00001,1), aux156)
reify(w-literal(Roster_00001_00002,1), aux157)
reify(w-literal(Roster_00001_00003,1), aux158)
reify(w-literal(Roster_00001_00004,1), aux159)
reify(w-literal(Roster_00001_00005,1), aux160)
reify(w-literal(Roster_00003_00000,1), aux161)
reify(w-literal(Roster_00003_00001,1), aux162)
reify(w-literal(Roster_00003_00002,1), aux163)
reify(w-literal(Roster_00003_00003,1), aux164)
reify(w-literal(Roster_00003_00004,1), aux165)
reify(w-literal(Roster_00003_00005,1), aux166)
reify(w-literal(Roster_00004_00000,1), aux167)
reify(w-literal(Roster_00004_00001,1), aux168)
reify(w-literal(Roster_00004_00002,1), aux169)
reify(w-literal(Roster_00004_00003,1), aux170)
reify(w-literal(Roster_00004_00004,1), aux171)
reify(w-literal(Roster_00004_00005,1), aux172)
reify(w-literal(Roster_00005_00000,1), aux173)
reify(w-literal(Roster_00005_00001,1), aux174)
reify(w-literal(Roster_00005_00002,1), aux175)
reify(w-literal(Roster_00005_00003,1), aux176)
reify(w-literal(Roster_00005_00004,1), aux177)
reify(w-literal(Roster_00005_00005,1), aux178)
reify(watched-or({w-literal(aux134,1),w-literal(aux20,1)}), aux179)
reify(watched-or({w-literal(aux46,1),w-literal(aux130,1)}), aux180)
reify(watched-or({w-literal(aux98,1),w-literal(aux77,1)}), aux181)
reify(watched-or({w-literal(aux33,1),w-literal(aux91,1)}), aux182)
reify(watched-or({w-literal(aux37,1),w-literal(aux54,1)}), aux183)
reify(watched-or({w-literal(aux107,1),w-literal(aux108,1)}), aux184)
reify(watched-or({w-literal(aux105,1),w-literal(aux63,1)}), aux185)
reify(watched-or({w-literal(aux36,1),w-literal(aux27,1)}), aux186)
reify(watched-or({w-literal(aux41,1),w-literal(aux131,1)}), aux187)
reify(watched-or({w-literal(aux99,1),w-literal(aux75,1)}), aux188)
reify(watched-or({w-literal(aux127,1),w-literal(aux92,1)}), aux189)
reify(watched-or({w-literal(aux100,1),w-literal(aux52,1)}), aux190)
reify(watched-or({w-literal(aux120,1),w-literal(aux113,1)}), aux191)
reify(watched-or({w-literal(aux13,1),w-literal(aux62,1)}), aux192)
reify(watched-or({w-literal(aux47,1),w-literal(aux24,1)}), aux193)
reify(watched-or({w-literal(aux42,1),w-literal(aux132,1)}), aux194)
reify(watched-or({w-literal(aux96,1),w-literal(aux76,1)}), aux195)
reify(watched-or({w-literal(aux87,1),w-literal(aux93,1)}), aux196)
reify(watched-or({w-literal(aux135,1),w-literal(aux53,1)}), aux197)
reify(watched-or({w-literal(aux102,1),w-literal(aux111,1)}), aux198)
reify(watched-or({w-literal(aux38,1),w-literal(aux61,1)}), aux199)
reify(watched-or({w-literal(aux74,1),w-literal(aux31,1)}), aux200)
reify(watched-or({w-literal(aux43,1),w-literal(aux133,1)}), aux201)
reify(watched-or({w-literal(aux97,1),w-literal(aux80,1)}), aux202)
reify(watched-or({w-literal(aux39,1),w-literal(aux88,1)}), aux203)
reify(watched-or({w-literal(aux32,1),w-literal(aux50,1)}), aux204)
reify(watched-or({w-literal(aux104,1),w-literal(aux117,1)}), aux205)
reify(watched-or({w-literal(aux67,1),w-literal(aux66,1)}), aux206)
reify(watched-or({w-literal(aux103,1),w-literal(aux28,1)}), aux207)
reify(watched-or({w-literal(aux44,1),w-literal(aux128,1)}), aux208)
reify(watched-or({w-literal(aux94,1),w-literal(aux79,1)}), aux209)
reify(watched-or({w-literal(aux11,1),w-literal(aux89,1)}), aux210)
reify(watched-or({w-literal(aux48,1),w-literal(aux51,1)}), aux211)
reify(watched-or({w-literal(aux106,1),w-literal(aux114,1)}), aux212)
reify(watched-or({w-literal(aux136,1),w-literal(aux65,1)}), aux213)
reify(watched-or({w-literal(aux12,1),w-literal(aux23,1)}), aux214)
reify(watched-or({w-literal(aux45,1),w-literal(aux129,1)}), aux215)
reify(watched-or({w-literal(aux95,1),w-literal(aux78,1)}), aux216)
reify(watched-or({w-literal(aux35,1),w-literal(aux90,1)}), aux217)
reify(watched-or({w-literal(aux40,1),w-literal(aux49,1)}), aux218)
reify(watched-or({w-literal(aux101,1),w-literal(aux119,1)}), aux219)
reify(watched-or({w-literal(aux34,1),w-literal(aux64,1)}), aux220)
reify(w-literal(Roster_00004_00004,2), aux11)
reify(w-literal(Roster_00001_00005,2), aux12)
reify(w-literal(Roster_00000_00001,2), aux13)
reify(w-literal(Roster_00004_00000,0), aux14)
reify(w-literal(Roster_00004_00003,0), aux15)
reify(w-literal(Roster_00004_00004,0), aux16)
reify(w-literal(Roster_00004_00001,0), aux17)
reify(w-literal(Roster_00004_00002,0), aux18)
reify(w-literal(Roster_00004_00005,0), aux19)
reify(w-literal(Roster_00001_00000,3), aux20)
reify(w-literal(Roster_00001_00000,0), aux21)
reify(w-literal(Roster_00001_00005,0), aux22)
reify(w-literal(Roster_00001_00005,3), aux23)
reify(w-literal(Roster_00001_00002,3), aux24)
reify(w-literal(Roster_00001_00002,0), aux25)
reify(w-literal(Roster_00001_00001,0), aux26)
reify(w-literal(Roster_00001_00001,3), aux27)
reify(w-literal(Roster_00001_00004,3), aux28)
reify(w-literal(Roster_00001_00004,0), aux29)
reify(w-literal(Roster_00001_00003,0), aux30)
reify(w-literal(Roster_00001_00003,3), aux31)
reify(w-literal(Roster_00005_00003,2), aux32)
reify(w-literal(Roster_00004_00000,2), aux33)
reify(w-literal(Roster_00000_00005,2), aux34)
reify(w-literal(Roster_00004_00005,2), aux35)
reify(w-literal(Roster_00001_00001,2), aux36)
reify(w-literal(Roster_00005_00000,2), aux37)
reify(w-literal(Roster_00000_00002,2), aux38)
reify(w-literal(Roster_00004_00003,2), aux39)
reify(w-literal(Roster_00005_00005,2), aux40)
reify(w-literal(Roster_00002_00001,2), aux41)
reify(w-literal(Roster_00002_00002,2), aux42)
reify(w-literal(Roster_00002_00003,2), aux43)
reify(w-literal(Roster_00002_00004,2), aux44)
reify(w-literal(Roster_00002_00005,2), aux45)
reify(w-literal(Roster_00002_00000,2), aux46)
reify(w-literal(Roster_00001_00002,2), aux47)
reify(w-literal(Roster_00005_00004,2), aux48)
reify(w-literal(Roster_00005_00005,3), aux49)
reify(w-literal(Roster_00005_00003,3), aux50)
reify(w-literal(Roster_00005_00004,3), aux51)
reify(w-literal(Roster_00005_00001,3), aux52)
reify(w-literal(Roster_00005_00002,3), aux53)
reify(w-literal(Roster_00005_00000,3), aux54)
reify(w-literal(Roster_00005_00004,0), aux55)
reify(w-literal(Roster_00005_00005,0), aux56)
reify(w-literal(Roster_00005_00000,0), aux57)
reify(w-literal(Roster_00005_00001,0), aux58)
reify(w-literal(Roster_00005_00003,0), aux59)
reify(w-literal(Roster_00005_00002,0), aux60)
reify(w-literal(Roster_00000_00002,3), aux61)
reify(w-literal(Roster_00000_00001,3), aux62)
reify(w-literal(Roster_00000_00000,3), aux63)
reify(w-literal(Roster_00000_00005,3), aux64)
reify(w-literal(Roster_00000_00004,3), aux65)
reify(w-literal(Roster_00000_00003,3), aux66)
reify(w-literal(Roster_00000_00003,2), aux67)
reify(w-literal(Roster_00003_00004,0), aux68)
reify(w-literal(Roster_00003_00003,0), aux69)
reify(w-literal(Roster_00003_00005,0), aux70)
reify(w-literal(Roster_00003_00000,0), aux71)
reify(w-literal(Roster_00003_00002,0), aux72)
reify(w-literal(Roster_00003_00001,0), aux73)
reify(w-literal(Roster_00001_00003,2), aux74)
reify(w-literal(Roster_00003_00001,3), aux75)
reify(w-literal(Roster_00003_00002,3), aux76)
reify(w-literal(Roster_00003_00000,3), aux77)
reify(w-literal(Roster_00003_00005,3), aux78)
reify(w-literal(Roster_00003_00004,3), aux79)
reify(w-literal(Roster_00003_00003,3), aux80)
reify(w-literal(Roster_00002_00000,0), aux81)
reify(w-literal(Roster_00002_00001,0), aux82)
reify(w-literal(Roster_00002_00003,0), aux83)
reify(w-literal(Roster_00002_00002,0), aux84)
reify(w-literal(Roster_00002_00004,0), aux85)
reify(w-literal(Roster_00002_00005,0), aux86)
reify(w-literal(Roster_00004_00002,2), aux87)
reify(w-literal(Roster_00004_00003,3), aux88)
reify(w-literal(Roster_00004_00004,3), aux89)
reify(w-literal(Roster_00004_00005,3), aux90)
reify(w-literal(Roster_00004_00000,3), aux91)
reify(w-literal(Roster_00004_00001,3), aux92)
reify(w-literal(Roster_00004_00002,3), aux93)
reify(w-literal(Roster_00003_00004,2), aux94)
reify(w-literal(Roster_00003_00005,2), aux95)
reify(w-literal(Roster_00003_00002,2), aux96)
reify(w-literal(Roster_00003_00003,2), aux97)
reify(w-literal(Roster_00003_00000,2), aux98)
reify(w-literal(Roster_00003_00001,2), aux99)
reify(w-literal(Roster_00005_00001,2), aux100)
reify(w-literal(Roster_00006_00005,2), aux101)
reify(w-literal(Roster_00006_00002,2), aux102)
reify(w-literal(Roster_00001_00004,2), aux103)
reify(w-literal(Roster_00006_00003,2), aux104)
reify(w-literal(Roster_00000_00000,2), aux105)
reify(w-literal(Roster_00006_00004,2), aux106)
reify(w-literal(Roster_00006_00000,2), aux107)
reify(w-literal(Roster_00006_00000,3), aux108)
reify(w-literal(Roster_00006_00000,0), aux109)
reify(w-literal(Roster_00006_00002,0), aux110)
reify(w-literal(Roster_00006_00002,3), aux111)
reify(w-literal(Roster_00006_00001,0), aux112)
reify(w-literal(Roster_00006_00001,3), aux113)
reify(w-literal(Roster_00006_00004,3), aux114)
reify(w-literal(Roster_00006_00004,0), aux115)
reify(w-literal(Roster_00006_00003,0), aux116)
reify(w-literal(Roster_00006_00003,3), aux117)
reify(w-literal(Roster_00006_00005,0), aux118)
reify(w-literal(Roster_00006_00005,3), aux119)
reify(w-literal(Roster_00006_00001,2), aux120)
reify(w-literal(Roster_00000_00001,0), aux121)
reify(w-literal(Roster_00000_00000,0), aux122)
reify(w-literal(Roster_00000_00004,0), aux123)
reify(w-literal(Roster_00000_00005,0), aux124)
reify(w-literal(Roster_00000_00002,0), aux125)
reify(w-literal(Roster_00000_00003,0), aux126)
reify(w-literal(Roster_00004_00001,2), aux127)
reify(w-literal(Roster_00002_00004,3), aux128)
reify(w-literal(Roster_00002_00005,3), aux129)
reify(w-literal(Roster_00002_00000,3), aux130)
reify(w-literal(Roster_00002_00001,3), aux131)
reify(w-literal(Roster_00002_00002,3), aux132)
reify(w-literal(Roster_00002_00003,3), aux133)
reify(w-literal(Roster_00001_00000,2), aux134)
reify(w-literal(Roster_00005_00002,2), aux135)
reify(w-literal(Roster_00000_00004,2), aux136)
ineq(1, aux7, 0)
ineq(1, aux5, 0)
ineq(2, aux4, 0)
ineq(1, aux9, 0)
ineq(1, aux2, 0)
ineq(2, aux3, 0)
ineq(1, aux6, 0)
ineq(1, aux8, 0)
ineq(1, aux0, 0)
ineq(1, aux10, 0)
ineq(1, aux1, 0)
watched-or({w-literal(aux63,1),w-literal(aux54,1),w-literal(aux20,1),w-literal(aux108,1),w-literal(aux91,1),w-literal(aux130,1),w-literal(aux77,1)})
watched-or({w-literal(aux62,1),w-literal(aux52,1),w-literal(aux27,1),w-literal(aux113,1),w-literal(aux92,1),w-literal(aux131,1),w-literal(aux75,1)})
watched-or({w-literal(aux61,1),w-literal(aux53,1),w-literal(aux24,1),w-literal(aux111,1),w-literal(aux93,1),w-literal(aux132,1),w-literal(aux76,1)})
watched-or({w-literal(aux66,1),w-literal(aux50,1),w-literal(aux31,1),w-literal(aux117,1),w-literal(aux88,1),w-literal(aux133,1),w-literal(aux80,1)})
watched-or({w-literal(aux65,1),w-literal(aux51,1),w-literal(aux28,1),w-literal(aux114,1),w-literal(aux89,1),w-literal(aux128,1),w-literal(aux79,1)})
watched-or({w-literal(aux64,1),w-literal(aux49,1),w-literal(aux23,1),w-literal(aux119,1),w-literal(aux90,1),w-literal(aux129,1),w-literal(aux78,1)})
watched-or({w-literal(aux105,1),w-literal(aux37,1),w-literal(aux134,1),w-literal(aux107,1),w-literal(aux33,1),w-literal(aux46,1),w-literal(aux98,1)})
watched-or({w-literal(aux13,1),w-literal(aux100,1),w-literal(aux36,1),w-literal(aux120,1),w-literal(aux127,1),w-literal(aux41,1),w-literal(aux99,1)})
watched-or({w-literal(aux38,1),w-literal(aux135,1),w-literal(aux47,1),w-literal(aux102,1),w-literal(aux87,1),w-literal(aux42,1),w-literal(aux96,1)})
watched-or({w-literal(aux67,1),w-literal(aux32,1),w-literal(aux74,1),w-literal(aux104,1),w-literal(aux39,1),w-literal(aux43,1),w-literal(aux97,1)})
watched-or({w-literal(aux136,1),w-literal(aux48,1),w-literal(aux103,1),w-literal(aux106,1),w-literal(aux11,1),w-literal(aux44,1),w-literal(aux94,1)})
watched-or({w-literal(aux34,1),w-literal(aux40,1),w-literal(aux12,1),w-literal(aux101,1),w-literal(aux35,1),w-literal(aux45,1),w-literal(aux95,1)})
sumleq([aux122,aux57,aux21,aux109,aux14,aux81,aux71],4)
sumleq([aux121,aux58,aux26,aux112,aux17,aux82,aux73],4)
sumleq([aux125,aux60,aux25,aux110,aux18,aux84,aux72],4)
sumleq([aux126,aux59,aux30,aux116,aux15,aux83,aux69],4)
sumleq([aux123,aux55,aux29,aux115,aux16,aux85,aux68],4)
sumleq([aux124,aux56,aux22,aux118,aux19,aux86,aux70],4)
ineq(aux2, 2, 0)
sumleq([aux149,aux150,aux151,aux152,aux153,aux154],2)
ineq(aux9, 2, 0)
sumleq([aux63,aux62,aux61,aux66,aux65,aux64],2)
sumleq([aux21,aux26,aux25,aux30,aux29,aux22],2)
sumleq([aux155,aux156,aux157,aux158,aux159,aux160],2)
ineq(aux7, 2, 0)
sumleq([aux20,aux27,aux24,aux31,aux28,aux23],2)
ineq(aux6, 2, 0)
ineq(aux3, 2, 0)
sumleq([aux46,aux41,aux42,aux43,aux44,aux45],2)
sumleq([aux130,aux131,aux132,aux133,aux128,aux129],2)
ineq(aux5, 2, 0)
sumleq([aux161,aux162,aux163,aux164,aux165,aux166],2)
sumleq([aux98,aux99,aux96,aux97,aux94,aux95],2)
sumleq([aux77,aux75,aux76,aux80,aux79,aux78],2)
ineq(aux0, 2, 0)
sumleq([aux167,aux168,aux169,aux170,aux171,aux172],2)
ineq(aux8, 2, 0)
sumleq([aux91,aux92,aux93,aux88,aux89,aux90],2)
ineq(aux1, 2, 0)
sumleq([aux173,aux174,aux175,aux176,aux177,aux178],2)
ineq(aux10, 2, 0)
sumleq([aux54,aux52,aux53,aux50,aux51,aux49],2)
sumleq([aux109,aux112,aux110,aux116,aux115,aux118],2)
ineq(aux4, 2, 0)
sumleq([aux107,aux120,aux102,aux104,aux106,aux101],2)
sumleq([aux108,aux113,aux111,aux117,aux114,aux119],2)
ineq(aux105, aux179, 0)
ineq(aux134, aux180, 0)
ineq(aux46, aux181, 0)
ineq(aux98, aux182, 0)
ineq(aux33, aux183, 0)
ineq(aux37, aux184, 0)
ineq(aux107, aux185, 0)
ineq(aux13, aux186, 0)
ineq(aux36, aux187, 0)
ineq(aux41, aux188, 0)
ineq(aux99, aux189, 0)
ineq(aux127, aux190, 0)
ineq(aux100, aux191, 0)
ineq(aux120, aux192, 0)
ineq(aux38, aux193, 0)
ineq(aux47, aux194, 0)
ineq(aux42, aux195, 0)
ineq(aux96, aux196, 0)
ineq(aux87, aux197, 0)
ineq(aux135, aux198, 0)
ineq(aux102, aux199, 0)
ineq(aux67, aux200, 0)
ineq(aux74, aux201, 0)
ineq(aux43, aux202, 0)
ineq(aux97, aux203, 0)
ineq(aux39, aux204, 0)
ineq(aux32, aux205, 0)
ineq(aux104, aux206, 0)
ineq(aux136, aux207, 0)
ineq(aux103, aux208, 0)
ineq(aux44, aux209, 0)
ineq(aux94, aux210, 0)
ineq(aux11, aux211, 0)
ineq(aux48, aux212, 0)
ineq(aux106, aux213, 0)
ineq(aux34, aux214, 0)
ineq(aux12, aux215, 0)
ineq(aux45, aux216, 0)
ineq(aux95, aux217, 0)
ineq(aux35, aux218, 0)
ineq(aux40, aux219, 0)
ineq(aux101, aux220, 0)
weightedsumleq([-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1],[aux122,aux105,aux57,aux37,aux21,aux134,aux109,aux107,aux14,aux33,aux81,aux46,aux71,aux98],0)
weightedsumleq([-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1],[aux121,aux13,aux58,aux100,aux26,aux36,aux112,aux120,aux17,aux127,aux82,aux41,aux73,aux99],0)
weightedsumleq([-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1],[aux125,aux38,aux60,aux135,aux25,aux47,aux110,aux102,aux18,aux87,aux84,aux42,aux72,aux96],0)
weightedsumleq([-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1],[aux126,aux67,aux59,aux32,aux30,aux74,aux116,aux104,aux15,aux39,aux83,aux43,aux69,aux97],0)
weightedsumleq([-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1],[aux123,aux136,aux55,aux48,aux29,aux103,aux115,aux106,aux16,aux11,aux85,aux44,aux68,aux94],0)
weightedsumleq([-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1],[aux124,aux34,aux56,aux40,aux22,aux12,aux118,aux101,aux19,aux35,aux86,aux45,aux70,aux95],0)
sumleq([aux14,aux17,aux18,aux15,aux16,aux19],aux0)
sumgeq([aux14,aux17,aux18,aux15,aux16,aux19],aux0)
sumleq([aux57,aux58,aux60,aux59,aux55,aux56],aux1)
sumgeq([aux57,aux58,aux60,aux59,aux55,aux56],aux1)
sumleq([aux122,aux121,aux125,aux126,aux123,aux124],aux2)
sumgeq([aux122,aux121,aux125,aux126,aux123,aux124],aux2)
sumleq([aux137,aux138,aux139,aux140,aux141,aux142],aux3)
sumgeq([aux137,aux138,aux139,aux140,aux141,aux142],aux3)
sumleq([aux143,aux144,aux145,aux146,aux147,aux148],aux4)
sumgeq([aux143,aux144,aux145,aux146,aux147,aux148],aux4)
sumleq([aux71,aux73,aux72,aux69,aux68,aux70],aux5)
sumgeq([aux71,aux73,aux72,aux69,aux68,aux70],aux5)
sumleq([aux81,aux82,aux84,aux83,aux85,aux86],aux6)
sumgeq([aux81,aux82,aux84,aux83,aux85,aux86],aux6)
sumleq([aux134,aux36,aux47,aux74,aux103,aux12],aux7)
sumgeq([aux134,aux36,aux47,aux74,aux103,aux12],aux7)
sumleq([aux33,aux127,aux87,aux39,aux11,aux35],aux8)
sumgeq([aux33,aux127,aux87,aux39,aux11,aux35],aux8)
sumleq([aux105,aux13,aux38,aux67,aux136,aux34],aux9)
sumgeq([aux105,aux13,aux38,aux67,aux136,aux34],aux9)
sumleq([aux37,aux100,aux135,aux32,aux48,aux40],aux10)
sumgeq([aux37,aux100,aux135,aux32,aux48,aux40],aux10)
**EOF**
