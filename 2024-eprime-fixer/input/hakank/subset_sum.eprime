$
$ Subset sum problem in Essence'.
$
$ From Katta G. Murty: "Optimization Models for Decision Making", page 340
$ http://ioe.engin.umich.edu/people/fac/books/murty/opti_model/junior-7.pdf
$ 
$ """
$ Example 7.8.1
$ 
$ A bank van had several bags of coins, each containing either
$ 16, 17, 23, 24, 39, or 40 coins. While the van was parked on the
$ street, thieves stole some bags. A total of 100 coins were lost.
$ It is required to find how many bags were stolen.
$ """
$
$ Compare with the following models:
$ * Comet: http://www.hakank.org/comet/subset_sum.co
$ * ECLiPSE: http://www.hakank.org/eclipse/subset_sum.ecl
$ * Gecode: http://www.hakank.org/gecode/subset_sum.cpp
$ * MiniZinc: http://www.hakank.org/minizinc/subset_sum.mzn
$
$ Model created by Hakan Kjellerstrand, hakank@gmail.com
$ See also my Tailor/Essence page: http://www.hakank.org/savile_row/
$
language ESSENCE' 1.0

letting n be 6
letting coins = [16, 17, 23, 24, 39, 40]
letting total be 101

find x : matrix indexed by [int(1..n)] of int(0..100000)
find ss : int(0..10000)

such that
  total = sum i : int(1..n) .  coins[i]*x[i],
  $ extra constraints
  ss = sum i : int(1..n) . x[i] > 0,
  ss = 3
