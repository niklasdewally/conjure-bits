$
$ Global constraint circuit  in Essence'.
$ 
$$ From Global Constraint Catalogue
$ http://www.emn.fr/x-info/sdemasse/gccat/Ccircuit.html
$ """
$ Enforce to cover a digraph G described by the NODES collection with one 
$ circuit visiting once all vertices of G.
$ 
$ Example
$     (
$     <
$     index-1	succ-2,​
$     index-2	succ-3,​
$     index-3	succ-4,​
$     index-4	succ-1
$     >
$    )
$ The circuit constraint holds since its NODES argument depicts the 
$ following Hamiltonian circuit visiting successively the vertices 
$ 1, 2, 3, 4 and 1.
$ """

$ Model created by Hakan Kjellerstrand, hakank@gmail.com
$ See also my Essence'/Savile Row page: http://www.hakank.org/savile_row/
$
language ESSENCE' 1.0

letting n be 5
letting range be domain int(1..n)

find x: matrix indexed by [range] of range
find z: matrix indexed by [range] of range 

$
$ This variant uses an extra array (z) for the orbit of x[1].
$
$ The constraint is that z[i] must not be 1 until i = n and then must be 1.
$
such that
   allDiff(x),
   allDiff(z),
   z[1] = x[1],
   forAll i: int(2..n) . z[i] = x[z[i-1]],
   forAll i: int(1..n-1) . z[i] != 1,
   z[n] = 1

      